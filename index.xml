<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Luis Miguens Blog</title>
    <link>https://blog.miguens.one/</link>
    <description>Recent content on Luis Miguens Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 11 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.miguens.one/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parallel Algorithms in C&#43;&#43;17 – Execution Policies, Advantages, and Limitations</title>
      <link>https://blog.miguens.one/posts/2025/07/parallel-algorithms-in-c-17-execution-policies-advantages-and-limitations/</link>
      <pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/07/parallel-algorithms-in-c-17-execution-policies-advantages-and-limitations/</guid>
      <description>&lt;p&gt;Modern C++ embraces the reality of multicore processors by providing high-level tools for parallelism. The C++17 standard introduced &lt;em&gt;parallel algorithms&lt;/em&gt;, essentially parallelised versions of existing STL algorithms, to help programs take advantage of multiple cores for improved performance. In this post, we explore how C++17 parallel algorithms work, focusing on the &lt;strong&gt;execution policies&lt;/strong&gt; (&lt;code&gt;std::execution::seq&lt;/code&gt;, &lt;code&gt;par&lt;/code&gt;, and &lt;code&gt;par_unseq&lt;/code&gt;), with examples of their use. We also discuss the performance benefits of parallel execution and critically examine the limitations – including overhead, portability, and scenarios where parallelism may not pay off. The tone is analytical and formal, with a viewpoint that whilst parallelism is powerful, it must be applied judiciously.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embracing Type Safety in C&#43;&#43;17: std::optional, std::variant, and std::any</title>
      <link>https://blog.miguens.one/posts/2025/07/embracing-type-safety-in-c-17-stdoptional-stdvariant-and-stdany/</link>
      <pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/07/embracing-type-safety-in-c-17-stdoptional-stdvariant-and-stdany/</guid>
      <description>&lt;p&gt;Modern C++ has placed increasing emphasis on &lt;strong&gt;type safety&lt;/strong&gt; and expressiveness. C++17 introduced three powerful utilities – &lt;strong&gt;&lt;code&gt;std::optional&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;std::variant&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;std::any&lt;/code&gt;&lt;/strong&gt; – that enhance the language&amp;rsquo;s flexibility while making code safer and more self-documenting. These facilities allow programmers to represent &amp;ldquo;optional&amp;rdquo; values, to use type-safe unions for variant types, and to perform type erasure for arbitrary types, respectively, all with the rigour of compile-time type checking or controlled runtime checks. In this article, we delve into each of these C++17 features in detail, examining how they improve upon pre-C++17 techniques, demonstrate their usage with practical code examples, discuss real-world applications, and consider edge cases, performance implications, and pitfalls. We also touch on how C++20/C++23 have further refined these utilities, all while keeping a focus on C++17.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Filesystem Library in C&#43;&#43;17: A Comprehensive Introduction</title>
      <link>https://blog.miguens.one/posts/2025/06/the-filesystem-library-in-c-17-a-comprehensive-introduction/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/06/the-filesystem-library-in-c-17-a-comprehensive-introduction/</guid>
      <description>&lt;p&gt;In modern C++ development, managing files and directories is a common requirement – from reading configuration files to generating logs or processing batches of data files. Until C++17, the language lacked a standard, platform-neutral way to perform filesystem operations. C++ developers either resorted to operating system APIs or relied on third-party libraries, leading to non-portable code or extra dependencies. With C++17, the new &lt;strong&gt;&lt;code&gt;&amp;lt;filesystem&amp;gt;&lt;/code&gt;&lt;/strong&gt; library (in namespace &lt;code&gt;std::filesystem&lt;/code&gt;) filled this gap by providing a rich set of tools for files and directories. In this post, I will introduce the C++17 filesystem library, examine its historical background, detail its components, and demonstrate how to use it with code examples. Along the way, I will offer a critical perspective on its design decisions, impact, and limitations, using British English spelling and an analytical tone targeted at experienced C++ developers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Template Argument Deduction for Class Templates in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2025/06/template-argument-deduction-for-class-templates-in-c-17/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/06/template-argument-deduction-for-class-templates-in-c-17/</guid>
      <description>&lt;h2 id=&#34;background-templates-in-c1114-and-the-need-for-change&#34;&gt;Background: Templates in C++11/14 and the Need for Change&lt;/h2&gt;&#xA;&lt;p&gt;Prior to C++17, when using class templates in C++, developers had to explicitly specify all template arguments for the class. The compiler did not deduce class template parameters from constructor arguments as it did for function templates. For example, constructing a &lt;code&gt;std::pair&lt;/code&gt; of two &lt;code&gt;int&lt;/code&gt; values required writing &lt;code&gt;std::pair&amp;lt;int, int&amp;gt; p(11, 22);&lt;/code&gt; – even though the compiler “already knows” the types of &lt;code&gt;11&lt;/code&gt; and &lt;code&gt;22&lt;/code&gt; are &lt;code&gt;int&lt;/code&gt;. In contrast, function templates benefited from &lt;em&gt;template argument deduction&lt;/em&gt; since C++98: given a function template like &lt;code&gt;sort(RanIt first, RanIt last)&lt;/code&gt;, the compiler can deduce the iterator type from the call &lt;code&gt;sort(v.begin(), v.end());&lt;/code&gt; without explicit template arguments. This discrepancy meant extra verbosity for class templates and led to &lt;em&gt;workarounds&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inline Variables in C&#43;&#43;17: ODR-Safe Header Definitions</title>
      <link>https://blog.miguens.one/posts/2025/06/inline-variables-in-c-17-odr-safe-header-definitions/</link>
      <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/06/inline-variables-in-c-17-odr-safe-header-definitions/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;C++17 introduced &lt;strong&gt;inline variables&lt;/strong&gt;, a feature designed to address a long-standing challenge in C++: defining variables in header files without violating the One Definition Rule (ODR). Before C++17, placing a global variable definition in a header and including it in multiple source files would violate ODR, leading to linker errors or undefined behaviour. Developers had to rely on workarounds like &lt;code&gt;extern&lt;/code&gt; declarations or the use of function templates and static variables to avoid multiple definitions. With inline variables, C++ now permits certain variables to be defined in headers (and included in multiple translation units) while treating those definitions as one single entity at link time. This article provides a detailed examination of inline variables, explaining what they are, how they work, why they were introduced, and their implications – both positive and negative – for C++ development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fold Expressions in C&#43;&#43;17: Simplifying Variadic Template Code</title>
      <link>https://blog.miguens.one/posts/2025/06/fold-expressions-in-c-17-simplifying-variadic-template-code/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/06/fold-expressions-in-c-17-simplifying-variadic-template-code/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Variadic templates, introduced in C++11, enabled functions and classes to accept an arbitrary number of arguments, but using them often required cumbersome recursion or expansion tricks. C++17 addressed this complexity by introducing &lt;strong&gt;fold expressions&lt;/strong&gt;, which provide a concise way to &lt;strong&gt;reduce (or &amp;ldquo;fold&amp;rdquo;) a parameter pack over a binary operator&lt;/strong&gt; (&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/fold#:~:text=Reduces%20,a%20binary%20operator&#34;&gt;Fold expressions (since C++17) - cppreference.com&lt;/a&gt;). In this article, I explore what fold expressions are, how they simplify variadic template code, and how to use them effectively. I will explain their syntax (unary left/right folds vs. binary folds), demonstrate several examples (summing values, computing logical conjunctions, finding a minimum value), and discuss common use cases, best practices, and pitfalls. The tone is analytical and professional, assuming an intermediate to advanced understanding of C++. By the end, you should have a thorough grasp of fold expressions and be ready to apply them in your modern C++ code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Structured Bindings</title>
      <link>https://blog.miguens.one/posts/2025/06/introduction-to-structured-bindings/</link>
      <pubDate>Tue, 03 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/06/introduction-to-structured-bindings/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Structured bindings, introduced in &lt;strong&gt;C++17&lt;/strong&gt;, allow developers to bind &lt;strong&gt;multiple variables&lt;/strong&gt; to the elements of a tuple-like object in a single, declarative statement. This feature was proposed by Herb Sutter, Bjarne Stroustrup, and Gabriel Dos Reis as part of the C++17 standardisation process. In essence, structured bindings enable &lt;strong&gt;decomposing&lt;/strong&gt; an object (such as an &lt;code&gt;std::tuple&lt;/code&gt;, &lt;code&gt;std::pair&lt;/code&gt;, or a struct) into separate named variables without explicit getters or &lt;code&gt;std::tie&lt;/code&gt;. As Herb Sutter described, it’s &lt;em&gt;“much like &lt;code&gt;std::tie&lt;/code&gt;, except without having to have variables of the correct type already available”&lt;/em&gt;. This simplification enhances both &lt;strong&gt;readability&lt;/strong&gt; and &lt;strong&gt;safety&lt;/strong&gt;, especially when handling multiple return values or complex data structures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>if constexpr in C&#43;&#43;17 – Enabling Compile-Time Conditionals</title>
      <link>https://blog.miguens.one/posts/2025/05/if-constexpr-in-c-17-enabling-compile-time-conditionals/</link>
      <pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/05/if-constexpr-in-c-17-enabling-compile-time-conditionals/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;C++17 introduced &lt;strong&gt;&lt;code&gt;if constexpr&lt;/code&gt;&lt;/strong&gt;, a language feature that brings &lt;strong&gt;compile-time conditional logic&lt;/strong&gt; into the core of C++ template programming. This construct – officially known as a &lt;em&gt;constexpr if statement&lt;/em&gt; – allows the compiler to evaluate a condition during compilation and &lt;strong&gt;discard one of the branches&lt;/strong&gt; based on a constant expression (&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/if#:~:text=If%20condition%20yields%20true%2C%20then,true%20is%20discarded&#34;&gt;if statement - cppreference.com&lt;/a&gt;). For intermediate and advanced C++ developers, &lt;code&gt;if constexpr&lt;/code&gt; offers a more &lt;em&gt;natural&lt;/em&gt; way to express conditional code in templates, eliminating much of the verbosity and complexity previously associated with template metaprogramming. This post provides an analytical exploration of &lt;code&gt;if constexpr&lt;/code&gt;: how it works mechanically, how it differs from a traditional runtime &lt;code&gt;if&lt;/code&gt;, comparisons with older techniques (like &lt;code&gt;std::enable_if&lt;/code&gt;, SFINAE, and tag dispatching), illustrative examples, and a critical look at its benefits and limitations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concurrency and Multithreading in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2025/04/concurrency-and-multithreading-in-c-17/</link>
      <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/04/concurrency-and-multithreading-in-c-17/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Concurrent programming allows a C++ program to execute multiple tasks &lt;em&gt;simultaneously&lt;/em&gt; (or at least appear to). In practice, this means breaking a program into &lt;strong&gt;threads&lt;/strong&gt; that run independently. Threads are units of execution that can run concurrently and potentially in parallel on multi-core systems. C++17 builds on the threading facilities introduced in C++11, providing standard tools to create threads, synchronise access to shared data, and avoid race conditions. In this post, we&amp;rsquo;ll explore key multithreading concepts in modern C++: starting threads with &lt;code&gt;std::thread&lt;/code&gt;, using mutual exclusion with &lt;code&gt;std::mutex&lt;/code&gt;, coordinating threads with condition variables (&lt;code&gt;std::condition_variable&lt;/code&gt;), and leveraging atomic operations with &lt;code&gt;std::atomic&lt;/code&gt;. Along the way, we&amp;rsquo;ll look at code examples and discuss best practices to write safe and efficient multi-threaded C++17 code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Smart Pointers and Memory Management in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2025/03/smart-pointers-and-memory-management-in-c-17/</link>
      <pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/03/smart-pointers-and-memory-management-in-c-17/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Memory management in C++ has traditionally required careful use of dynamic allocation and manual deallocation. Mistakes in managing memory (such as forgetting to delete allocated memory or deleting it twice) can lead to resource leaks, dangling pointers, or crashes. Modern C++ addresses these issues with &lt;strong&gt;RAII&lt;/strong&gt; (Resource Acquisition Is Initialisation) and &lt;strong&gt;smart pointers&lt;/strong&gt;, which automatically manage the lifetime of dynamically allocated objects and help prevent resource leaks (&lt;a href=&#34;https://cpp-core-guidelines-docs.vercel.app/resource#:~:text=They%20can%20prevent%20resource%20leaks&#34;&gt;R: Resource management – C++&lt;/a&gt;). This article provides an in-depth look at C++17 smart pointers – &lt;code&gt;std::unique_ptr&lt;/code&gt;, &lt;code&gt;std::shared_ptr&lt;/code&gt;, and &lt;code&gt;std::weak_ptr&lt;/code&gt; – explaining their functionalities, benefits, and best use cases. We will also discuss best practices for dynamic memory allocation, including ownership semantics, avoiding leaks, and performance considerations. The discussion assumes you are an intermediate or advanced C++ developer familiar with basic pointers and memory concepts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Comprehensive Examination of Exception Handling in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2025/02/a-comprehensive-examination-of-exception-handling-in-c-17/</link>
      <pubDate>Mon, 10 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2025/02/a-comprehensive-examination-of-exception-handling-in-c-17/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;Exception handling is an essential aspect of robust software development in C++. In my experience, well-structured exception handling can significantly improve a program’s reliability and maintainability, particularly when dealing with complex error scenarios. In this post, I examine the fundamentals of exception handling in C++17, discussing &lt;code&gt;try-catch&lt;/code&gt; blocks, exception specifications, the standard exception hierarchy, and best practices for error handling. I also illustrate key concepts with code examples and references to relevant authoritative sources (Stroustrup, &lt;em&gt;The C++ Programming Language&lt;/em&gt;, 4th ed.; ISO/IEC 14882:2017; cppreference.com).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lambda Expressions and Functional Programming in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/12/lambda-expressions-and-functional-programming-in-c-17/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/12/lambda-expressions-and-functional-programming-in-c-17/</guid>
      <description>&lt;h2 id=&#34;embracing-lambda-expressions-in-c17-a-step-towards-more-functional-programming&#34;&gt;Embracing Lambda Expressions in C++17: A Step Towards More Functional Programming**&lt;/h2&gt;&#xA;&lt;p&gt;Lambda expressions (anonymous functions) have long been a critical element of functional programming languages, and with the introduction of lambdas in C++11—subsequently refined in C++14 and C++17—this paradigmatic approach has firmly rooted itself in the modern C++ ecosystem. In my experience, embracing lambda expressions can profoundly simplify complex code structures, encourage more declarative patterns, and pave the way towards a more functional style of programming. In this blog post, I will critically examine the syntax and semantics of lambda expressions, discuss their capturing mechanisms, and demonstrate how they can be effectively leveraged in conjunction with the Standard Template Library (STL) algorithms to produce cleaner, more concise, and maintainable code. Throughout, I will reference authoritative sources and cite industry best practices, while offering my personal perspective on the benefits and potential pitfalls of this feature.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An In-Depth Exploration of the Standard Template Library (STL) in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/11/an-in-depth-exploration-of-the-standard-template-library-stl-in-c-17/</link>
      <pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/11/an-in-depth-exploration-of-the-standard-template-library-stl-in-c-17/</guid>
      <description>&lt;p&gt;As a software developer with a penchant for C++, I have often found the Standard Template Library (STL) to be an indispensable component of efficient programming. Introduced to provide a collection of generic classes and functions, the STL has evolved significantly, particularly with the enhancements brought by C++17. In this blog post, I aim to provide a comprehensive overview of the STL, focusing on its core components: containers, iterators, algorithms, and function objects. Through detailed explanations and practical examples, we will explore how these components can be leveraged to write more robust and maintainable code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring Templates and Generic Programming in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/10/exploring-templates-and-generic-programming-in-c-17/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/10/exploring-templates-and-generic-programming-in-c-17/</guid>
      <description>&lt;p&gt;In my experience with C++ programming, templates and generic programming have proven to be indispensable tools for creating flexible and efficient code. The introduction of templates revolutionised the way we write code by allowing functions and classes to operate with generic types. In this blog post, I will delve into function templates, class templates, and template specialisation, illustrating how they contribute to the power of generic programming in C++17.&lt;/p&gt;&#xA;&lt;h2 id=&#34;function-templates&#34;&gt;Function Templates&lt;/h2&gt;&#xA;&lt;p&gt;Function templates enable us to write functions that can operate with any data type. This is particularly useful when the same logic applies to different types, and rewriting code for each type would be inefficient.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Object-Oriented Programming Concepts in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/09/object-oriented-programming-concepts-in-c-17/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/09/object-oriented-programming-concepts-in-c-17/</guid>
      <description>&lt;p&gt;In my experience, object-oriented programming (OOP) stands as a cornerstone in the realm of software development, offering a paradigm that models real-world entities through classes and objects. C++17, being a modern iteration of the C++ language, enriches this paradigm with advanced features and improved functionalities. In this blog post, I aim to delve deep into the fundamental principles of OOP in C++17—covering classes, objects, inheritance, polymorphism, encapsulation, and access specifiers—while providing illustrative examples to elucidate these concepts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Pointers and References in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/</link>
      <pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/</guid>
      <description>&lt;p&gt;In my experience with C++17, pointers and references are fundamental concepts that, when mastered, can significantly enhance one&amp;rsquo;s ability to write efficient and effective code. In this blog post, I aim to delve into the intricacies of pointers and references, discuss pointer arithmetic, explore null pointers and smart pointers, and elucidate the use of references, all while providing code examples to clarify each point.&lt;/p&gt;&#xA;&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#introduction-to-pointers&#34;&gt;Introduction to Pointers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#pointer-arithmetic&#34;&gt;Pointer Arithmetic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#null-pointers&#34;&gt;Null Pointers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#smart-pointers&#34;&gt;Smart Pointers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#understanding-references&#34;&gt;Understanding References&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.miguens.one/posts/2024/07/understanding-pointers-and-references-in-c-17/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction-to-pointers&#34;&gt;Introduction to Pointers&lt;/h2&gt;&#xA;&lt;p&gt;A pointer in C++ is a variable that holds the memory address of another variable. Pointers are powerful tools that allow for dynamic memory management, efficient array handling, and the creation of complex data structures like linked lists and trees.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handling Arrays and Strings in C&#43;&#43;17: A Comprehensive Guide</title>
      <link>https://blog.miguens.one/posts/2024/06/handling-arrays-and-strings-in-c-17-a-comprehensive-guide/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/06/handling-arrays-and-strings-in-c-17-a-comprehensive-guide/</guid>
      <description>&lt;p&gt;The efficient manipulation of arrays and strings is fundamental to proficient programming in C++17. In this discourse, I shall delve into fixed-size arrays, dynamic arrays, &lt;code&gt;std::array&lt;/code&gt;, &lt;code&gt;std::vector&lt;/code&gt;, and &lt;code&gt;std::string&lt;/code&gt;. Through illustrative examples, we will explore common operations and best practices.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Arrays and strings are pivotal data structures in C++, serving as the cornerstone for data storage and manipulation. C++17 offers a rich set of features that enhance these structures, providing both flexibility and efficiency. While fixed-size and dynamic arrays offer granular control, the Standard Template Library (STL) introduces containers like &lt;code&gt;std::array&lt;/code&gt;, &lt;code&gt;std::vector&lt;/code&gt;, and &lt;code&gt;std::string&lt;/code&gt; that simplify usage and improve safety.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functions in C&#43;&#43;17: A Comprehensive Analysis</title>
      <link>https://blog.miguens.one/posts/2024/05/functions-in-c-17-a-comprehensive-analysis/</link>
      <pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/05/functions-in-c-17-a-comprehensive-analysis/</guid>
      <description>&lt;p&gt;In the realm of C++17, functions remain a cornerstone of effective programming, offering a means to encapsulate code for reusability and clarity. In this blog post, I will delve into the intricacies of function declaration and definition, default arguments, overloading, inline functions, and recursion. Through detailed explanations and illustrative examples, we shall explore these concepts, critically analysing their applications and nuances.&lt;/p&gt;&#xA;&lt;h2 id=&#34;function-declaration-and-definition&#34;&gt;Function Declaration and Definition&lt;/h2&gt;&#xA;&lt;p&gt;At the heart of any C++ program lies the function, a block of code designed to perform a specific task. The distinction between function declaration and definition is fundamental.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering Control Flow Statements in C&#43;&#43;17</title>
      <link>https://blog.miguens.one/posts/2024/04/mastering-control-flow-statements-in-c-17/</link>
      <pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/04/mastering-control-flow-statements-in-c-17/</guid>
      <description>&lt;p&gt;In the realm of C++ programming, control flow statements are indispensable tools that enable us to dictate the execution path of our code. They provide the means to make decisions, iterate over data, and manage the flow of execution based on specific conditions. In this post, I will delve into the intricacies of control flow statements in C++17, including &lt;code&gt;if-else&lt;/code&gt;, &lt;code&gt;switch-case&lt;/code&gt;, traditional loops (&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;), and the modern range-based &lt;code&gt;for&lt;/code&gt; loop. Through detailed explanations and code examples, we will explore how these constructs function and how they can be effectively utilised in your code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring Operators and Expressions in C&#43;&#43;17: An In-Depth Analysis</title>
      <link>https://blog.miguens.one/posts/2024/02/exploring-operators-and-expressions-in-c-17-an-in-depth-analysis/</link>
      <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2024/02/exploring-operators-and-expressions-in-c-17-an-in-depth-analysis/</guid>
      <description>&lt;p&gt;In my journey with C++17, I have found that a comprehensive understanding of operators and expressions is indispensable for writing efficient and effective code. Operators are the building blocks that allow us to manipulate data and construct complex logic. In this blog post, I aim to delve into the various types of operators available in C++17—arithmetic, relational, logical, bitwise operators, and the concept of operator overloading—providing detailed explanations and illustrative examples to showcase their practical applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variables and Data Types in C&#43;&#43;17: An In-Depth Exploration</title>
      <link>https://blog.miguens.one/posts/2023/12/variables-and-data-types-in-c-17-an-in-depth-exploration/</link>
      <pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/12/variables-and-data-types-in-c-17-an-in-depth-exploration/</guid>
      <description>&lt;p&gt;Understanding variables and data types is quintessential for any programming endeavour, particularly in a language as robust and nuanced as C++17. In this discourse, I shall delve into the fundamental types, elucidate the mechanisms of type inference with &lt;code&gt;auto&lt;/code&gt;, and examine the utilisation of &lt;code&gt;constexpr&lt;/code&gt;. Through code snippets and critical analysis, we will navigate the intricacies of variable declaration and initialisation in modern C++.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fundamental-types-in-c17&#34;&gt;Fundamental Types in C++17&lt;/h2&gt;&#xA;&lt;p&gt;C++17, being a statically-typed language, necessitates that the type of every variable is known at compile-time (Stroustrup, 2013). The language offers a rich tapestry of data types, categorised broadly into built-in (fundamental) types and user-defined types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the Basic Structure of a C&#43;&#43; Program</title>
      <link>https://blog.miguens.one/posts/2023/11/understanding-the-basic-structure-of-a-c-program/</link>
      <pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/11/understanding-the-basic-structure-of-a-c-program/</guid>
      <description>&lt;p&gt;In my experience as a software developer, grasping the fundamental structure of a C++ program is pivotal for writing efficient and maintainable code. This article delves into the essential components of a C++ program, including headers, namespaces, the &lt;code&gt;main&lt;/code&gt; function, and compilation units. By examining these elements in detail, we can better understand how they interact to form a cohesive application.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;headers&#34;&gt;Headers&lt;/h2&gt;&#xA;&lt;p&gt;Headers in C++ are files that contain declarations of functions, classes, variables, and other identifiers. They allow us to share these declarations across multiple source files, promoting code reusability and modularity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embracing C&#43;&#43;17: A Comprehensive Guide to Its Evolution and Key Features</title>
      <link>https://blog.miguens.one/posts/2023/10/embracing-c-17-a-comprehensive-guide-to-its-evolution-and-key-features/</link>
      <pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/10/embracing-c-17-a-comprehensive-guide-to-its-evolution-and-key-features/</guid>
      <description>&lt;p&gt;As a software developer with a keen interest in programming languages&amp;rsquo; evolution, I have observed the significant strides C++ has made over the years. C++17, in particular, represents a substantial advancement from its predecessors, introducing features that enhance efficiency, readability, and performance. In this blog post, I aim to delve into the evolution of C++ leading up to C++17, explore its key features, and discuss why integrating it into your development projects could be highly beneficial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Reflective Memory via Software: A Deep Dive</title>
      <link>https://blog.miguens.one/posts/2023/09/understanding-reflective-memory-via-software-a-deep-dive/</link>
      <pubDate>Thu, 14 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/09/understanding-reflective-memory-via-software-a-deep-dive/</guid>
      <description>&lt;p&gt;In modern computing environments, the need for real-time data synchronization across multiple systems or processors is increasingly critical. One technology that facilitates this is Reflective Memory (RM). Traditionally, Reflective Memory has been associated with hardware solutions—dedicated memory modules and fiber-optic networks ensuring that changes in one node’s memory are instantly reflected across all nodes. However, with the advancement of software technologies, reflective memory is no longer confined to hardware implementations. This article explores how reflective memory can be achieved through software, its applications, and the challenges that come with it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Increase the Speed of GitLab Pipelines</title>
      <link>https://blog.miguens.one/posts/2023/08/how-to-increase-the-speed-of-gitlab-pipelines/</link>
      <pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/08/how-to-increase-the-speed-of-gitlab-pipelines/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;GitLab is a comprehensive DevOps platform that provides a seamless environment for developers to create, test, and deploy code. GitLab CI/CD (Continuous Integration/Continuous Deployment) pipelines are an essential feature that enables teams to automate the build, test, and deployment processes. However, as projects grow in size and complexity, pipeline execution can slow down, impacting overall productivity. This article outlines strategies to increase the speed of your GitLab pipelines, ensuring an efficient software development process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Perils of Using a Distributed Cache for GitLab Runners</title>
      <link>https://blog.miguens.one/posts/2023/07/the-perils-of-using-a-distributed-cache-for-gitlab-runners/</link>
      <pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/07/the-perils-of-using-a-distributed-cache-for-gitlab-runners/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;GitLab is a popular platform for developers to manage their software development lifecycle, including source code management, continuous integration, and continuous deployment. With GitLab Runners, teams can run their CI/CD pipelines to automate the build, test, and deployment process. But when it comes to optimizing pipeline performance, there&amp;rsquo;s a popular misconception that using a distributed cache for GitLab Runners is a good idea. In this article, we will discuss why implementing a distributed cache for GitLab Runners can actually be detrimental to your pipeline, and we will offer alternative solutions for exchanging data between jobs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The State Involvement: A Deep Dive into Banks, Government, and the Balancing Act of Economic Policy</title>
      <link>https://blog.miguens.one/posts/2023/07/the-state-involvement-a-deep-dive-into-banks-government-and-the-balancing-act-of-economic-policy/</link>
      <pubDate>Thu, 13 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/07/the-state-involvement-a-deep-dive-into-banks-government-and-the-balancing-act-of-economic-policy/</guid>
      <description>&lt;p&gt;Every economy exists in a delicate balance between growth and stability. Central banks and governments play critical roles in maintaining this balance, acting as the guardians of their nation&amp;rsquo;s financial health. However, their responsibilities often seem to contradict each other. On one hand, central banks are tasked with limiting inflation, which requires a delicate act of restraining economic growth. On the other, they are expected to support employment, which calls for stimulating the economy. So how do these entities reconcile these seemingly opposing objectives? Let&amp;rsquo;s take a deeper look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An Introduction to Mutexes and Multithreading in C</title>
      <link>https://blog.miguens.one/posts/2023/06/an-introduction-to-mutexes-and-multithreading-in-c/</link>
      <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/06/an-introduction-to-mutexes-and-multithreading-in-c/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Title: An Introduction to Mutexes and Multithreading in C&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In the world of programming, threads are a crucial concept that allows for concurrent execution within a single process. This concurrent execution is made possible through multithreading, a widespread technique in modern programming. However, when multiple threads access a shared resource, synchronization problems can arise. In this blog post, we&amp;rsquo;ll explore how to use Mutexes in C for thread synchronization and delve into the concept of multithreading.&lt;/p&gt;</description>
    </item>
    <item>
      <title>High-performance runners on GitLab CI</title>
      <link>https://blog.miguens.one/posts/2023/06/high-performance-runners-on-gitlab-ci/</link>
      <pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/06/high-performance-runners-on-gitlab-ci/</guid>
      <description>&lt;p&gt;To ensure that high-performance runners are never idle while there are pending jobs, you can leverage the following strategies:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Runner priority (Enterprise Edition only): GitLab Enterprise Edition (Premium and Ultimate) offers the option to set runner priority directly in the Runner&amp;rsquo;s settings. You can give your high-performance runners a higher priority, which will make them pick jobs before low-performance runners. To set priority, go to the Runner&amp;rsquo;s details page in the GitLab web interface, and set the &amp;ldquo;Priority&amp;rdquo; field accordingly. Note that this feature is not available in GitLab Community Edition (CE).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a Virtual File System with FUSE and Python</title>
      <link>https://blog.miguens.one/posts/2023/05/creating-a-virtual-file-system-with-fuse-and-python/</link>
      <pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/05/creating-a-virtual-file-system-with-fuse-and-python/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This is a continuation of my previous article:&lt;/strong&gt; &lt;em&gt;Save Snippets of Python code as single XML file&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;creating-a-virtual-file-system-with-fuse-and-python&#34;&gt;Creating a Virtual File System with FUSE and Python&lt;/h1&gt;&#xA;&lt;p&gt;FUSE (Filesystem in Userspace) is a software interface that allows user-level programs to create and manage file systems without requiring root privileges. This makes it possible to create custom file systems that can be mounted and accessed like regular file systems.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we will create a virtual file system using FUSE and Python. The file system will expose a set of Python code snippets as files, allowing users to read and execute the snippets as if they were regular Python scripts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Save Snippets of Python code as single XML file</title>
      <link>https://blog.miguens.one/posts/2023/04/save-snippets-of-python-code-as-single-xml-file/</link>
      <pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/04/save-snippets-of-python-code-as-single-xml-file/</guid>
      <description>&lt;h1 id=&#34;how-to-use-an-xml-file-to-store-multiple-portions-of-python-code&#34;&gt;How to Use an XML File to Store Multiple Portions of Python Code&lt;/h1&gt;&#xA;&lt;p&gt;Have you ever needed to run several Python code snippets in the cloud and wished for an easy way to organize and package them? One way to accomplish this is by using an XML file to store your Python code snippets. An XML file is a file format that is used to store and transport data, and can be easily read and written by machines. By creating an XML file to store your code snippets, you can easily package them together and upload them to the cloud to run as a single package.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speed Up I/O Performance with RAMDisk and LVM Cache</title>
      <link>https://blog.miguens.one/posts/2023/04/speed-up-i/o-performance-with-ramdisk-and-lvm-cache/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/04/speed-up-i/o-performance-with-ramdisk-and-lvm-cache/</guid>
      <description>&lt;p&gt;In this blog article, we will discuss various methods to speed up I/O performance and ultimately settle on using LVM to mount a fast I/O device with a RAMDisk as cache. This approach is beneficial when you don&amp;rsquo;t care about retaining data in the location between reboots.&lt;/p&gt;&#xA;&lt;h2 id=&#34;options-considered&#34;&gt;Options Considered&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Only use RAM (i.e., tmpfs of 20 or 30GB)&lt;/strong&gt;: This option has the problem that if RAM is not enough, the build will fail.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use larger tmps (double the amounts above) and use the fast I/O location as a swap&lt;/strong&gt;: The issue with this option is that if the system needs to use the swap, the complete OS could become laggy and unresponsive, affecting the build times.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Concatenate RAM with Fast I/O using LVM&lt;/strong&gt;: This approach does not guarantee that the filesystem will write first on RAM.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use LVM to mount the Fast I/O with RAMDisk as cache&lt;/strong&gt;: This is the best approach among the options considered, but further research on the options of LVM is needed.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;We will focus on option 4 for the rest of this article.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Notes book: Spend Less, Invest More, and Live Free: A Guide to Financial Freedom</title>
      <link>https://blog.miguens.one/posts/2023/04/notes-book-spend-less-invest-more-and-live-free-a-guide-to-financial-freedom/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/04/notes-book-spend-less-invest-more-and-live-free-a-guide-to-financial-freedom/</guid>
      <description>&lt;p&gt;&lt;em&gt;Spend less than you earn – invest the surplus – avoid debt.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Do simply this, and you&amp;rsquo;ll wind up rich. Not just in money. If your lifestyle matches or, god forbid, exceeds your income, you are no more than a gilded slave.&lt;/p&gt;&#xA;&lt;p&gt;As individuals, we only have one obligation to society: To make sure we and our children are not a burden to others. The rest is your personal choice. Make your own and make the world a far more interesting place.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Heartfelt Apology: Life&#39;s Beautiful Twists and Turns</title>
      <link>https://blog.miguens.one/posts/2023/03/a-heartfelt-apology-lifes-beautiful-twists-and-turns/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2023/03/a-heartfelt-apology-lifes-beautiful-twists-and-turns/</guid>
      <description>&lt;p&gt;Hello dear readers,&lt;/p&gt;&#xA;&lt;p&gt;I hope this message finds you all in good health and high spirits. It&amp;rsquo;s been a while since I last shared my thoughts and experiences with you, and for that, I must extend my most sincere apologies. You deserve an explanation, so let me take this opportunity to share the amazing whirlwind of life changes I&amp;rsquo;ve been through lately.&lt;/p&gt;&#xA;&lt;p&gt;First and foremost, I&amp;rsquo;m thrilled to announce that I&amp;rsquo;ve accepted a new job at CERN, the European Organization for Nuclear Research! As many of you know, working at CERN has been a lifelong dream of mine. The opportunity to contribute to groundbreaking research in particle physics is an honor and a privilege. Of course, this fantastic opportunity has also come with its fair share of adjustments, including relocating to Geneva, Switzerland, and diving headfirst into the challenging and fast-paced world of high-energy physics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>59 Seconds: Think a little, change a lot</title>
      <link>https://blog.miguens.one/posts/2021/06/59-seconds-think-a-little-change-a-lot/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/59-seconds-think-a-little-change-a-lot/</guid>
      <description>&lt;p&gt;My highlighs of the book: &lt;strong&gt;59 Seconds: Think a little, change a lot&lt;/strong&gt; by &lt;em&gt;Richard Wiseman&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;chapter-1---happiness&#34;&gt;Chapter 1 - Happiness&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We all get used to what we have very quickly. Buying a new car or a bigger house provides a short-term feel-good boost, but we quickly become accustomed to it and sink back to our pre-purchase level of joy.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;About 50 percent of your overall sense of happiness is genetically determined,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatic Type Annotations in Python</title>
      <link>https://blog.miguens.one/posts/2021/06/automatic-type-annotations-in-python/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/automatic-type-annotations-in-python/</guid>
      <description>&lt;p&gt;In a previous post, I explained how to use type annotations in Python. You can find the post &lt;a href=&#34;https://blog.miguens.one/posts/2021/05/type-annotations-in-python/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Now, we will see how to migrate code without type annotations using two tools: pyannotate and MonkeyType&lt;/p&gt;&#xA;&lt;h2 id=&#34;pyannotate&#34;&gt;pyannotate&lt;/h2&gt;&#xA;&lt;p&gt;Pyannotate is a project started by Dropbox and published in &lt;a href=&#34;https://github.com/dropbox/pyannotate&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It is intended to be used alongside your test scripts. It requires minor modifications to your existing code to add &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;stop&lt;/em&gt; statements. The statements mentioned will indicate where pyannotate should record the types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting to Yes: Negotiating Agreement Without Giving In</title>
      <link>https://blog.miguens.one/posts/2021/06/getting-to-yes-negotiating-agreement-without-giving-in/</link>
      <pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/getting-to-yes-negotiating-agreement-without-giving-in/</guid>
      <description>&lt;p&gt;Here are my notes of &lt;strong&gt;Getting to Yes: Negotiating Agreement Without Giving In&lt;/strong&gt;&#xA;&lt;em&gt;by Roger Fisher and William Ury&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-dont-bargain-over-positions&#34;&gt;1 Don’t Bargain Over Positions&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Arguing over positions is inefficient&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Bargaining over positions creates incentives that stall settlement. In positional bargaining you try to improve the chance that any settlement reached is favorable to you by starting with an extreme position, by stubbornly holding to it, by deceiving the other party as to your true views, and by making small concessions only as necessary to keep the negotiation going.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bargaining with the Devil: When to Negotiate, When to Fight</title>
      <link>https://blog.miguens.one/posts/2021/06/bargaining-with-the-devil-when-to-negotiate-when-to-fight/</link>
      <pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/bargaining-with-the-devil-when-to-negotiate-when-to-fight/</guid>
      <description>&lt;p&gt;Notes of the book:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bargaining with the Devil: When to Negotiate, When to Fight&lt;/strong&gt;&#xA;&lt;em&gt;by Mnookin, Robert&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, for an act to be evil, the perpetrator must intend to inflict harm. Carelessness is not enough. Second, the harm must be very serious. I use the word grievous to connote harms that are severe. Third, the infliction of harm must lack an adequate justification or excuse.&lt;/p&gt;&#xA;&lt;h2 id=&#34;interests&#34;&gt;Interests&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;What are my interests? What are my adversary’s interests?&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to download all certificates of UDEMY</title>
      <link>https://blog.miguens.one/posts/2021/06/how-to-download-all-certificates-of-udemy/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/how-to-download-all-certificates-of-udemy/</guid>
      <description>&lt;p&gt;A simple script using Selenium to download all the certicates of Udemy, as they do not provide API&lt;/p&gt;&#xA;&lt;p&gt;There is room for improvement, mostly removing the time.sleep calls. That part of code is there because the initial load of the page does not provide that data, as it is query via an internal API and the data fill with JavaScript.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; webdriver&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; urllib.parse &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; urlparse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxxx@gmail.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xxxxxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LOGIN_WEBPAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.udemy.com/join/login-popup/?skip_suggest=1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USERNAME_XPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;//*[@id=&amp;#34;email--1&amp;#34;]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PASSWORD_XPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;//*[@id=&amp;#34;id_password&amp;#34;]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LOGIN_BUTTON&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;//*[@id=&amp;#34;submit-id-submit&amp;#34;]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do_login&lt;/span&gt;(driver):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(LOGIN_WEBPAGE)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_xpath(USERNAME_XPATH)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;send_keys(USERNAME)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_xpath(PASSWORD_XPATH)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;send_keys(PASSWORD)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_xpath(LOGIN_BUTTON)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;click()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_number_pages&lt;/span&gt;(driver, webpage):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(webpage &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?p=1&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Some Javascript in Udemy makes detecting the courses slow&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    elems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_xpath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//a[@href]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; elem &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elems:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; webpage &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            elems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(webpage &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?p=&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(elems) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                new_number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(elems[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; new_number &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; number:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_number&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; number&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COURSES_WEBPAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.udemy.com/home/my-courses/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CATEGORIES_COURSES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learning/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;archived/&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_courses_id_by_pagination&lt;/span&gt;(driver, webpage):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(webpage)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Some Javascript in Udemy makes detecting the courses slow&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    elems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_xpath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//a[@href]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; elem &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elems:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?course_id=&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            elems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?course_id=&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(elems) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(elems[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_courses_id_by_category&lt;/span&gt;(driver, webpage):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    number_of_pages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_number_pages(driver, webpage)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; number &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, number_of_pages&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;get_courses_id_by_pagination(driver, webpage &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;?p=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(number))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;union(ids)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ids&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_courses_id&lt;/span&gt;(driver):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; category &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; CATEGORIES_COURSES:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_courses_id_by_category(driver, COURSES_WEBPAGE &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; category)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;union(ids)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ids&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COURSE_URL_REDIRECT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.udemy.com/course-dashboard-redirect/?course_id=&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CERTIFICATE_URL_PREFIX &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.udemy.com/certificate/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CERTIFICATE_PDF_SCHEMA &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://udemy-certificate.s3.amazonaws.com/pdf/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.pdf&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_certificate_url&lt;/span&gt;(driver, course_id):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(COURSE_URL_REDIRECT &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(course_id))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    elems &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_xpath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//a[@href]&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    certificate_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; elem &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elems:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; CERTIFICATE_URL_PREFIX &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            certificate_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; elem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; certificate_url &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    certificate_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; certificate_url&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.udemy.com/certificate/&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; CERTIFICATE_PDF_SCHEMA&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(certificate_id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DESTINATION &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D:/Vault/Diplomas/Udemy/&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;download&lt;/span&gt;(url):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urlparse(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    filename &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basename(a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url, allow_redirects&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open(DESTINATION &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filename, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FirefoxOptions()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;binary_location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Program Files/Mozilla Firefox/firefox.exe&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--headless&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Firefox(options&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;opts)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_login(driver)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ids &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_courses_id(driver)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; course_id &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ids:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_certificate_url(driver, course_id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; url &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        download(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Distributed Storage with CEPH</title>
      <link>https://blog.miguens.one/posts/2021/06/distributed-storage-with-ceph/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/distributed-storage-with-ceph/</guid>
      <description>&lt;h2 id=&#34;what-is-ceph&#34;&gt;What is ceph&lt;/h2&gt;&#xA;&lt;p&gt;Ceph is a software-defined storage solution designed to address the object, block, and file storage needs of data centers adopting open source as the new norm for high-growth block storage, object stores, and data lakes.&lt;/p&gt;&#xA;&lt;p&gt;Ceph aims primarily for entirely distributed operation without a single point of failure, scalable to the exabyte level, and freely available.&lt;/p&gt;&#xA;&lt;p&gt;In this way, administrators have a single, consolidated system that avoids silos and collects the storage within a common management framework. As a result, Ceph consolidates several storage use cases and improves resource utilization. It also lets an organization deploy servers where needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>El arte de no amargarse la vida</title>
      <link>https://blog.miguens.one/posts/2021/06/el-arte-de-no-amargarse-la-vida/</link>
      <pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/06/el-arte-de-no-amargarse-la-vida/</guid>
      <description>&lt;p&gt;Estas son mis notas de un libro de Rafael Santedreu. Su modo de enfocar la vida ayuda a poner todo en perspectiva cuando sientes que te estas ahogando.&lt;/p&gt;&#xA;&lt;h2 id=&#34;la-sinopsis-obtenida-de-amazon&#34;&gt;La sinopsis (obtenida de Amazon)&lt;/h2&gt;&#xA;&lt;p&gt;Rafael Santandreu explica que muchos de los problemas emocionales actuales son causa de una mala filosofía de vida. Con gran facilidad nos creemos deprimidos, ansiosos o muy desgraciados. El arte de no amargarse la vida cuenta que todos estos trastornos emocionales podrían calificarse de terribilitis. En nuestra sociedad tenemos muchas creencias que nos hacen ser infelices como que si no tienes pareja eres desdichado o que hay que tener un puesto de trabajo muy importante para realizarse.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type Annotations in Python</title>
      <link>https://blog.miguens.one/posts/2021/05/type-annotations-in-python/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/05/type-annotations-in-python/</guid>
      <description>&lt;h2 id=&#34;what-are-type-annotations&#34;&gt;What are type annotations&lt;/h2&gt;&#xA;&lt;p&gt;Python is a dynamic typed language, meaning that types are associated with the variable&amp;rsquo;s value, not the variable itself. This means that variables can take on any value at any point, and are only type checked before performing an action with them.&lt;/p&gt;&#xA;&lt;p&gt;Type Annotations are a new feature added in PEP 484 that allow for adding type hints to variables. They are used to inform someone reading the code what the type of a variable should be. This brings a sense of statically typed control to the dynamically typed Python. This is accomplished by adding &amp;ldquo;&lt;code&gt;: &amp;lt;type&amp;gt;&lt;/code&gt;&amp;rdquo; after initializing/declaring a variable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use Two-Factor Authentication (2FA)</title>
      <link>https://blog.miguens.one/posts/2021/05/how-to-use-two-factor-authentication-2fa/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/05/how-to-use-two-factor-authentication-2fa/</guid>
      <description>&lt;p&gt;Two-Factor Authentication (2FA) works by adding a layer of security to your online accounts. It requires an additional log in credential &amp;ndash; beyond just the username and password &amp;ndash; to gain account access. Getting that second credential requires access to something that belongs to you, for example, a mobile phone.&lt;/p&gt;&#xA;&lt;p&gt;In this article, I will explain how to set up 2FA on your mobile phone. Several apps can generate the codes (additional login credentials) to be used with 2FA. The three most popular choices are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to manage your pension fund in The Netherlands</title>
      <link>https://blog.miguens.one/posts/2021/05/how-to-manage-your-pension-fund-in-the-netherlands/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/05/how-to-manage-your-pension-fund-in-the-netherlands/</guid>
      <description>&lt;p&gt;This article is written from the perspective of an employee in The Netherlands. In this case, a person can usually have three types of pension funds:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A mandatory pension fund managed by the government: SVB.&lt;/li&gt;&#xA;&lt;li&gt;An optional pension fund made up of employee contributions and employer contributions. It depends on the company policy and the collective employment conditions (CAO) of the sector you are working in.&lt;/li&gt;&#xA;&lt;li&gt;A self-managed pension fund made up of personal contributions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;My objective is to explain this last type of pension fund: self-managed pension fund.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use C&#43;&#43; in Jupyter Lab</title>
      <link>https://blog.miguens.one/posts/2021/04/how-to-use-c-in-jupyter-lab/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/04/how-to-use-c-in-jupyter-lab/</guid>
      <description>&lt;h2 id=&#34;how-to-use-c-in-jupyter-lab&#34;&gt;How to use C++ in Jupyter Lab&lt;/h2&gt;&#xA;&lt;p&gt;One of the main extension points of the Jupyter stack is the kernel, the part of the infrastructure responsible for executing the user’s code. Jupyter kernels exist for numerous programming languages.&#xA;Most Jupyter kernels are implemented in the target programming language: the reference implementation ipykernel in Python, IJulia in Julia&lt;/p&gt;&#xA;&lt;p&gt;Xeus is a C++ implementation of the Jupyter kernel protocol. It is not a kernel itself but a library that facilitates the authoring of kernels, and other applications making use of the Jupyter kernel protocol.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Profiling a Python program</title>
      <link>https://blog.miguens.one/posts/2021/03/profiling-a-python-program/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/03/profiling-a-python-program/</guid>
      <description>&lt;p&gt;If we wish to know how long it takes for a portion of code to run, an obvious answer is to time it:&lt;/p&gt;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# do_something()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;It took {end - start} seconds!&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the program grows, doing this is impractical, but python provides us, by default, with the cProfile module to get information about the running time of our program&amp;rsquo;s functions.&lt;/p&gt;&#xA;&lt;p&gt;Using cProfile is to import it into our program and pass the python code we wish to analyse.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parallelism in Python: Linux vs Windows.</title>
      <link>https://blog.miguens.one/posts/2021/03/parallelism-in-python-linux-vs-windows./</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/03/parallelism-in-python-linux-vs-windows./</guid>
      <description>&lt;p&gt;In Linux, when you start a child process, it is &lt;strong&gt;Forked&lt;/strong&gt;. It means that the child process inherits the memory state of the parent process. On Windows (and by default on Mac), however, processes are &lt;strong&gt;Spawned&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Even though processes usually speed up the execution of a program by using multiple cores on a computer, starting each process can be time-consuming.&lt;/p&gt;&#xA;&lt;p&gt;The fact that on Windows and Mac Python needs to &lt;em&gt;pickle&lt;/em&gt; the objects to create child processes adds an overhead that may offset the benefits of running on separated processes. It is especially relevant when you have many small tasks to perform, instead of a couple of long-running ones.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parallelism in Python.</title>
      <link>https://blog.miguens.one/posts/2021/03/parallelism-in-python./</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/03/parallelism-in-python./</guid>
      <description>&lt;p&gt;In Python, &lt;strong&gt;by default&lt;/strong&gt; we have three options to add parallel processing to our applications:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;threading&lt;/li&gt;&#xA;&lt;li&gt;multiprocessing&lt;/li&gt;&#xA;&lt;li&gt;concurrent.futures&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The first option, &lt;code&gt;threading&lt;/code&gt; is useful with I/O and networking tasks, as the parallelization remains in a single core.&lt;/p&gt;&#xA;&lt;p&gt;The second option, &lt;code&gt;multiprocessing&lt;/code&gt;, is used with intensive CPU tasks, and the processing will be distributed in all the cores of our machine. The disadvantage of &lt;code&gt;multiprocessing&lt;/code&gt; is that all the information and objects should be serializable. To know is an object is serializable, you can try to &lt;code&gt;pickle&lt;/code&gt; and &lt;code&gt;unpickle&lt;/code&gt;. If the process goes without error, you can use  &lt;code&gt;multiprocessing&lt;/code&gt; as a rule of the tumb.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Investing with Python: Part 2 - Stocks</title>
      <link>https://blog.miguens.one/posts/2021/01/investing-with-python-part-2-stocks/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/01/investing-with-python-part-2-stocks/</guid>
      <description>&lt;p&gt;This is a continuation of the previous post. Here I will apply the Black Litterman model to a portfolio of stocks.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; yfinance &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; yf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; openpyxl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; currency_converter &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CurrencyConverter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pypfopt &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BlackLittermanModel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pypfopt &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; black_litterman, risk_models&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Declare constants&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PORTFOLIO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/mnt/wd-bigfoot/share/luis/OneDrive/Documents/Portfolio/00 portfolio.xlsx&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;STOCKS_SHEET&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Stocks&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;START_DATE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2010-01-01&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;END_DATE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2021-01-08&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALL_WORLD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IWDA.AS&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOTAL_FUNDS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40e3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 40.000 EUR&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Open the portfolio and get the stocks&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks_pd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(PORTFOLIO, engine&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;openpyxl&amp;#39;&lt;/span&gt;, sheet_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;STOCKS_SHEET)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks_pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stocks_pd[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Symbol&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks_pd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stocks_pd[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Company Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Prediction&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pesimistic&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Optimistic&amp;#39;&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks_pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;div&gt;&#xA;&lt;style scoped&gt;&#xA;    .dataframe tbody tr th:only-of-type {&#xA;        vertical-align: middle;&#xA;    }&#xA;&#xA;    .dataframe tbody tr th {&#xA;        vertical-align: top;&#xA;    }&#xA;&#xA;    .dataframe thead th {&#xA;        text-align: right;&#xA;    }&#xA;&lt;/style&gt;&#xA;&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;&#xA;  &lt;thead&gt;&#xA;    &lt;tr style=&#34;text-align: right;&#34;&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;Company Name&lt;/th&gt;&#xA;      &lt;th&gt;Prediction&lt;/th&gt;&#xA;      &lt;th&gt;Pesimistic&lt;/th&gt;&#xA;      &lt;th&gt;Optimistic&lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;Symbol&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AMD&lt;/th&gt;&#xA;      &lt;td&gt;Advanced Micro Devices, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.40&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AIR.PA&lt;/th&gt;&#xA;      &lt;td&gt;Airbus SE&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;GOOGL&lt;/th&gt;&#xA;      &lt;td&gt;Alphabet Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AMZN&lt;/th&gt;&#xA;      &lt;td&gt;Amazon.com, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AAPL&lt;/th&gt;&#xA;      &lt;td&gt;Apple Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.40&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BA.L&lt;/th&gt;&#xA;      &lt;td&gt;BAE Systems plc&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;CSCO&lt;/th&gt;&#xA;      &lt;td&gt;Cisco Systems, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BN.PA&lt;/th&gt;&#xA;      &lt;td&gt;Danone S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;FB&lt;/th&gt;&#xA;      &lt;td&gt;Facebook, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;GE&lt;/th&gt;&#xA;      &lt;td&gt;General Electric Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;HYU.F&lt;/th&gt;&#xA;      &lt;td&gt;Hyundai Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IDR.MC&lt;/th&gt;&#xA;      &lt;td&gt;Indra Sistemas, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.02&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;INTC&lt;/th&gt;&#xA;      &lt;td&gt;Intel Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IBM&lt;/th&gt;&#xA;      &lt;td&gt;International Business Machines Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IAG.MC&lt;/th&gt;&#xA;      &lt;td&gt;International Consolidated Airlines Group, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;      &lt;td&gt;-0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.00&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PHIA.AS&lt;/th&gt;&#xA;      &lt;td&gt;Koninklijke Philips N.V.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MEL.MC&lt;/th&gt;&#xA;      &lt;td&gt;Meliá Hotels International, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MRK&lt;/th&gt;&#xA;      &lt;td&gt;Merck &amp;amp; Co., Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MSFT&lt;/th&gt;&#xA;      &lt;td&gt;Microsoft Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NESN.SW&lt;/th&gt;&#xA;      &lt;td&gt;Nestlé S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NFLX&lt;/th&gt;&#xA;      &lt;td&gt;Netflix, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.01&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NHH.MC&lt;/th&gt;&#xA;      &lt;td&gt;NH Hotel Group, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NOKIA.HE&lt;/th&gt;&#xA;      &lt;td&gt;Nokia Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NVDA&lt;/th&gt;&#xA;      &lt;td&gt;NVIDIA Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;ORCL&lt;/th&gt;&#xA;      &lt;td&gt;Oracle Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PEP&lt;/th&gt;&#xA;      &lt;td&gt;PepsiCo, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;QCOM&lt;/th&gt;&#xA;      &lt;td&gt;QUALCOMM Incorporated&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SSUN.F&lt;/th&gt;&#xA;      &lt;td&gt;Samsung Electronics Co., Ltd.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SIE.DE&lt;/th&gt;&#xA;      &lt;td&gt;Siemens Aktiengesellschaft&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;ENR.DE&lt;/th&gt;&#xA;      &lt;td&gt;Siemens Energy AG&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SPOT&lt;/th&gt;&#xA;      &lt;td&gt;Spotify Technology S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.02&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TSLA&lt;/th&gt;&#xA;      &lt;td&gt;Tesla, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TXN&lt;/th&gt;&#xA;      &lt;td&gt;Texas Instruments Incorporated&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BA&lt;/th&gt;&#xA;      &lt;td&gt;The Boeing Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;KHC&lt;/th&gt;&#xA;      &lt;td&gt;The Kraft Heinz Company&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PG&lt;/th&gt;&#xA;      &lt;td&gt;The Procter &amp;amp; Gamble Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;DIS&lt;/th&gt;&#xA;      &lt;td&gt;The Walt Disney Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TMO&lt;/th&gt;&#xA;      &lt;td&gt;Thermo Fisher Scientific Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TM&lt;/th&gt;&#xA;      &lt;td&gt;Toyota Motor Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;UBER&lt;/th&gt;&#xA;      &lt;td&gt;Uber Technologies, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;UL&lt;/th&gt;&#xA;      &lt;td&gt;Unilever PLC&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Get the historical data of the stocks and exchange to EUR&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CurrencyConverter(fallback_on_missing_rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, fallback_on_wrong_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; symbol &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stocks_pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    history &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(symbol, start&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;START_DATE, end&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;END_DATE)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Adj Close&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dataframe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(history)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    currency &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Ticker(symbol)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;currency&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ symbol &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; currency ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Add Market Cap to the stocks_pd&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stocks_pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;at[symbol, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Cap&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(yf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Ticker(symbol)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;marketCap&amp;#39;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                  currency, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EUR&amp;#39;&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                  dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pydatetime())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Add column with security in EUR if needed&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; currency&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower() &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eur&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            original_value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;at[index, symbol &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; currency]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(original_value, currency, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EUR&amp;#39;&lt;/span&gt;, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pydatetime())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;at[index, symbol &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:EUR&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Merge everything&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stocks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([ stocks, dataframe], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fill any NA values with the best forward or backarwd value&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ffill&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; cc, symbol, history, dataframe, currency, original_value, value, index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;[*********************100%***********************]  1 of 1 completed&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks_pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div&gt;&#xA;&lt;style scoped&gt;&#xA;    .dataframe tbody tr th:only-of-type {&#xA;        vertical-align: middle;&#xA;    }&#xA;&#xA;    .dataframe tbody tr th {&#xA;        vertical-align: top;&#xA;    }&#xA;&#xA;    .dataframe thead th {&#xA;        text-align: right;&#xA;    }&#xA;&lt;/style&gt;&#xA;&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;&#xA;  &lt;thead&gt;&#xA;    &lt;tr style=&#34;text-align: right;&#34;&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;Company Name&lt;/th&gt;&#xA;      &lt;th&gt;Prediction&lt;/th&gt;&#xA;      &lt;th&gt;Pesimistic&lt;/th&gt;&#xA;      &lt;th&gt;Optimistic&lt;/th&gt;&#xA;      &lt;th&gt;Market Cap&lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;Symbol&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;      &lt;th&gt;&lt;/th&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AMD&lt;/th&gt;&#xA;      &lt;td&gt;Advanced Micro Devices, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.40&lt;/td&gt;&#xA;      &lt;td&gt;8.148238e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AIR.PA&lt;/th&gt;&#xA;      &lt;td&gt;Airbus SE&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;7.461750e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;GOOGL&lt;/th&gt;&#xA;      &lt;td&gt;Alphabet Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;      &lt;td&gt;1.183262e+12&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AMZN&lt;/th&gt;&#xA;      &lt;td&gt;Amazon.com, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;      &lt;td&gt;1.355935e+12&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;AAPL&lt;/th&gt;&#xA;      &lt;td&gt;Apple Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.40&lt;/td&gt;&#xA;      &lt;td&gt;1.765546e+12&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BA.L&lt;/th&gt;&#xA;      &lt;td&gt;BAE Systems plc&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.787769e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;CSCO&lt;/th&gt;&#xA;      &lt;td&gt;Cisco Systems, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.811978e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BN.PA&lt;/th&gt;&#xA;      &lt;td&gt;Danone S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;3.849391e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;FB&lt;/th&gt;&#xA;      &lt;td&gt;Facebook, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;7.102801e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;GE&lt;/th&gt;&#xA;      &lt;td&gt;General Electric Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;9.526443e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;HYU.F&lt;/th&gt;&#xA;      &lt;td&gt;Hyundai Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;      &lt;td&gt;3.768063e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IDR.MC&lt;/th&gt;&#xA;      &lt;td&gt;Indra Sistemas, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.02&lt;/td&gt;&#xA;      &lt;td&gt;1.320735e+09&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;INTC&lt;/th&gt;&#xA;      &lt;td&gt;Intel Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;2.213519e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IBM&lt;/th&gt;&#xA;      &lt;td&gt;International Business Machines Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.000500e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;IAG.MC&lt;/th&gt;&#xA;      &lt;td&gt;International Consolidated Airlines Group, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;      &lt;td&gt;-0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.00&lt;/td&gt;&#xA;      &lt;td&gt;1.080973e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PHIA.AS&lt;/th&gt;&#xA;      &lt;td&gt;Koninklijke Philips N.V.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;4.355928e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MEL.MC&lt;/th&gt;&#xA;      &lt;td&gt;Meliá Hotels International, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;      &lt;td&gt;1.345669e+09&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MRK&lt;/th&gt;&#xA;      &lt;td&gt;Merck &amp;amp; Co., Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.683183e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;MSFT&lt;/th&gt;&#xA;      &lt;td&gt;Microsoft Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;1.537831e+12&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NESN.SW&lt;/th&gt;&#xA;      &lt;td&gt;Nestlé S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.03&lt;/td&gt;&#xA;      &lt;td&gt;2.751414e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NFLX&lt;/th&gt;&#xA;      &lt;td&gt;Netflix, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.01&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;2.033889e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NHH.MC&lt;/th&gt;&#xA;      &lt;td&gt;NH Hotel Group, S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.50&lt;/td&gt;&#xA;      &lt;td&gt;1.475451e+09&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NOKIA.HE&lt;/th&gt;&#xA;      &lt;td&gt;Nokia Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;1.926819e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;NVDA&lt;/th&gt;&#xA;      &lt;td&gt;NVIDIA Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.30&lt;/td&gt;&#xA;      &lt;td&gt;2.806550e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;ORCL&lt;/th&gt;&#xA;      &lt;td&gt;Oracle Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.641228e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PEP&lt;/th&gt;&#xA;      &lt;td&gt;PepsiCo, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.651222e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;QCOM&lt;/th&gt;&#xA;      &lt;td&gt;QUALCOMM Incorporated&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;1.291990e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SSUN.F&lt;/th&gt;&#xA;      &lt;td&gt;Samsung Electronics Co., Ltd.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;4.059750e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SIE.DE&lt;/th&gt;&#xA;      &lt;td&gt;Siemens Aktiengesellschaft&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.086902e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;ENR.DE&lt;/th&gt;&#xA;      &lt;td&gt;Siemens Energy AG&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;2.160643e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;SPOT&lt;/th&gt;&#xA;      &lt;td&gt;Spotify Technology S.A.&lt;/td&gt;&#xA;      &lt;td&gt;0.02&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;4.376889e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TSLA&lt;/th&gt;&#xA;      &lt;td&gt;Tesla, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.20&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;5.454659e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TXN&lt;/th&gt;&#xA;      &lt;td&gt;Texas Instruments Incorporated&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.416198e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;BA&lt;/th&gt;&#xA;      &lt;td&gt;The Boeing Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.208403e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;KHC&lt;/th&gt;&#xA;      &lt;td&gt;The Kraft Heinz Company&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;4.085665e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;PG&lt;/th&gt;&#xA;      &lt;td&gt;The Procter &amp;amp; Gamble Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;2.802307e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;DIS&lt;/th&gt;&#xA;      &lt;td&gt;The Walt Disney Company&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;2.940217e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TMO&lt;/th&gt;&#xA;      &lt;td&gt;Thermo Fisher Scientific Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.15&lt;/td&gt;&#xA;      &lt;td&gt;1.527621e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;TM&lt;/th&gt;&#xA;      &lt;td&gt;Toyota Motor Corporation&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;-0.02&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;1.805378e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;UBER&lt;/th&gt;&#xA;      &lt;td&gt;Uber Technologies, Inc.&lt;/td&gt;&#xA;      &lt;td&gt;0.10&lt;/td&gt;&#xA;      &lt;td&gt;-0.10&lt;/td&gt;&#xA;      &lt;td&gt;0.20&lt;/td&gt;&#xA;      &lt;td&gt;8.531728e+10&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;      &lt;th&gt;UL&lt;/th&gt;&#xA;      &lt;td&gt;Unilever PLC&lt;/td&gt;&#xA;      &lt;td&gt;0.00&lt;/td&gt;&#xA;      &lt;td&gt;-0.05&lt;/td&gt;&#xA;      &lt;td&gt;0.05&lt;/td&gt;&#xA;      &lt;td&gt;1.977436e+11&lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Get market reference (MSCI All World Accumulative ETF in USD)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(yf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(ALL_WORLD, start&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;START_DATE, end&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;END_DATE)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Adj Close&amp;#39;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Ref:USD&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CurrencyConverter(fallback_on_missing_rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, fallback_on_wrong_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    original_value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;at[index, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Ref:USD&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(original_value, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USD&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EUR&amp;#39;&lt;/span&gt;, date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pydatetime())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;at[index, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Ref:EUR&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fill any NA values with the best forward or backarwd value&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ffill&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; cc, original_value, value, index&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[*********************100%***********************]  1 of 1 completed&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clean up dataframes and keep only EUR with the symbol name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Same for Market&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:EUR&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; column:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(column, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    symbol, currency &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; column&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(mapper&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{column: symbol}, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:EUR&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; column:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(column, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    symbol, currency &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; column&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(mapper&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{column: symbol}, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; column, symbol, currency&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a checkpoint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cache_stocks.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cache_market.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Restore Checkpoint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cache_stocks.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DatetimeIndex(stocks[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;]), inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cache_market.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DatetimeIndex(market[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;]), inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;market&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Construct the dictionary with your views&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;views &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stocks_pd[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Prediction&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_dict()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Construct a uncertanties dictionary&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;optimistic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stocks_pd[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Optimistic&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_dict()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pesimistic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stocks_pd[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pesimistic&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_dict()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;variances &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; symbol &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; views&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sigma &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (optimistic[symbol] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; pesimistic[symbol])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    variances&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(sigma &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;omega &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;diag(variances)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; optimistic, pesimistic, variances, symbol, sigma&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Construct the Black Litterman &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;S &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; risk_models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CovarianceShrinkage(stocks)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ledoit_wolf()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; black_litterman&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;market_implied_risk_aversion(market[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Ref&amp;#39;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Using a pi equal weighted as the market caps for stocks are too complex to calculate&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BlackLittermanModel(S, pi&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;market&amp;#34;&lt;/span&gt;, market_caps&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stocks_pd[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Market Cap&amp;#39;&lt;/span&gt;], &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         risk_aversion&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;delta, absolute_views&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;views, omega&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;omega)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ret_bl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bl_returns()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;S_bl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bl_cov()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pypfopt &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; EfficientFrontier, objective_functions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ef &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; EfficientFrontier(ret_bl, S_bl)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ef&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_objective(objective_functions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;L2_reg)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ef&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max_sharpe()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;weights &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ef&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clean_weights()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Series(weights)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pie(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/home/luis/.local/lib/python3.8/site-packages/pypfopt/efficient_frontier.py:195: UserWarning: max_sharpe transforms the optimisation problem so additional objectives may not work as expected.&#xA;  warnings.warn(&#xA;/home/luis/.local/lib/python3.8/site-packages/pandas/plotting/_matplotlib/core.py:1547: MatplotlibDeprecationWarning: normalize=None does not normalize if the sum is less than 1 but this behavior is deprecated since 3.3 until two minor releases later. After the deprecation period the default value will be normalize=True. To prevent normalization pass normalize=False &#xA;  results = ax.pie(y, labels=blabels, **kwds)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.miguens.one/img/invest-stocks.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Investing with Python: Part 1 - ETFs</title>
      <link>https://blog.miguens.one/posts/2021/01/investing-with-python-part-1-etfs/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2021/01/investing-with-python-part-1-etfs/</guid>
      <description>&lt;h2 id=&#34;what-is-the-black-litterman-model&#34;&gt;What Is the Black-Litterman Model?&lt;/h2&gt;&#xA;&lt;p&gt;The Black-Litterman (BL) Model is an analytical tool used by portfolio managers to optimize asset allocation within an investor’s risk tolerance and market views.&lt;/p&gt;&#xA;&lt;p&gt;The BL model starts from a neutral position using modern portfolio theory (MPT), and then takes additional input from investors&amp;rsquo; views to determine how the ultimate asset allocation should deviate from the initial portfolio weights.&lt;/p&gt;&#xA;&lt;p&gt;I will use the &lt;a href=&#34;https://pyportfolioopt.readthedocs.io/en/latest/&#34;&gt;PyPortfolioOpt&lt;/a&gt; is a library that implements portfolio optimization methods, including classical efficient frontier techniques and Black-Litterman allocation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trading in Python: Part 2</title>
      <link>https://blog.miguens.one/posts/2020/12/trading-in-python-part-2/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/12/trading-in-python-part-2/</guid>
      <description>&lt;p&gt;In the previous post, we wrote the basics of stock trading in Python. We saw how to make a small wallet to record transactions, how to fetch data from investing.com in a python object and we wrote some generic classes to buy and sell when a security crosses a thresold.&lt;/p&gt;&#xA;&lt;p&gt;Now we will continue our exercise writing a program to run several strategias over a period of time.&lt;/p&gt;&#xA;&lt;p&gt;As we are going to run different scenarios, it is a good idea to use parallelisation in our design.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trading in Python: Part 1</title>
      <link>https://blog.miguens.one/posts/2020/12/trading-in-python-part-1/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/12/trading-in-python-part-1/</guid>
      <description>&lt;h2 id=&#34;what-is-the-difference-between-trading-and-investing&#34;&gt;What is the difference between Trading and Investing?&lt;/h2&gt;&#xA;&lt;p&gt;Trading and investing both involve seeking profit in the stock market, but they pursue that goal in different ways.&lt;/p&gt;&#xA;&lt;p&gt;Traders jump in and out of stocks within weeks, days, even minutes, with the aim of short-term profits. They often focus on a stock’s technical factors rather than a company’s long-term prospects. What matters to traders is which direction the stock will move next and how the trader can profit from that move.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web automation with Selenium</title>
      <link>https://blog.miguens.one/posts/2020/11/web-automation-with-selenium/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/11/web-automation-with-selenium/</guid>
      <description>&lt;p&gt;If you are a fellow student of The Open University, you have realized that sometimes the emails notifying of the results&#xA;of your module are sent up to two days after the result have actually being published.&lt;/p&gt;&#xA;&lt;p&gt;That situation leave you with checking manually the website of the Open University for your result, but there is a better way.&lt;/p&gt;&#xA;&lt;p&gt;Selenium is a web automation suite that can be used in any language. It simulates the behavior of an user, and you can retrieve&#xA;the information you are interested upon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://blog.miguens.one/about/</link>
      <pubDate>Sat, 10 Oct 2020 13:38:32 +0100</pubDate>
      <guid>https://blog.miguens.one/about/</guid>
      <description>&lt;h2 id=&#34;who-am-i&#34;&gt;Who am I?&lt;/h2&gt;&#xA;&lt;p&gt;I am a fast learner, organized and dedicated individual. I have good interpersonal skills; I am an excellent team worker,&#xA;keen and very willing to learn and develop new skills. I am reliable and dependable and often seek new responsibilities&#xA;to improve myself.&lt;/p&gt;&#xA;&lt;p&gt;I have an active and dynamic approach to work and getting things done. I am determined and decisive.&lt;/p&gt;&#xA;&lt;p&gt;I’m genuinely passionate about my work and always eager to connect with other people.&#xA;While I enjoy all aspects of my job, I think my favourite stage of a project is understanding the systems and connections&#xA;behind a problem and find new and better ways to solve it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing Python modules in C&#43;&#43;</title>
      <link>https://blog.miguens.one/posts/2020/08/writing-python-modules-in-c-/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/08/writing-python-modules-in-c-/</guid>
      <description>&lt;h2 id=&#34;how-to-build-libraries-in-c-and-use-them-in-python&#34;&gt;How to build libraries in C++ and use them in Python&lt;/h2&gt;&#xA;&lt;p&gt;In this post I will expose one way to create libraries in C++ and expose them to Python.&lt;/p&gt;&#xA;&lt;p&gt;This can be very useful when we want to integrate existing piece of code, or write new code that perform better than Python.&lt;/p&gt;&#xA;&lt;p&gt;The way exposed in this post will make use of &lt;a href=&#34;https://www.boost.org/&#34;&gt;Boost&lt;/a&gt;, a peer reviewed C++ set of libraries. In paticular, we will use &lt;a href=&#34;https://www.boost.org/doc/libs/1_75_0/libs/python/doc/html/index.html&#34;&gt;Boost-Python&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases MySQL: C&#43;&#43;</title>
      <link>https://blog.miguens.one/posts/2020/06/databases-mysql-c-/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/06/databases-mysql-c-/</guid>
      <description>&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;In the first place, we need to install the MySQL Connector for C++. I am using Ubuntu, so I will use apt-get. Please adapt if you are using another distro not based on Debian.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install libmysqlcppconn-dev libmysqlcppconn7v5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can try our database, for that I will use the example 2 included in the MySQL Connector. You can find the source code &lt;a href=&#34;https://dev.mysql.com/doc/connector-cpp/1.1/en/connector-cpp-examples-complete-example-2.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The test program is:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Standard C++ includes */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  Include directly the different&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  headers from cppconn/ and mysql_driver.h + mysql_util.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  (and mysql_connection.h). This will reduce your build time!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;mysql_connection.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cppconn/driver.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cppconn/exception.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cppconn/resultset.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cppconn/statement.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cppconn/prepared_statement.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Let&amp;#39;s have MySQL count from 10 to 1...&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Driver &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;driver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Connection &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;con;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Statement &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;stmt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ResultSet &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;res;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;PreparedStatement &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pstmt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* Create a connection */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_driver_instance();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    con &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp://127.0.0.1:3306&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* Connect to the MySQL test database */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    con&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;setSchema(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datab&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;createStatement();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stmt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DROP TABLE IF EXISTS test&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stmt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CREATE TABLE test(id INT)&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; stmt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* &amp;#39;?&amp;#39; is the supported placeholder syntax */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;prepareStatement(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO test(id) VALUES (?)&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;setInt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, i);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pstmt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;executeUpdate();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; pstmt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* Select in ascending order */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pstmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;prepareStatement(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT id FROM test ORDER BY id ASC&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstmt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;executeQuery();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* Fetch in reverse = descending order! */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;afterLast();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;previous())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;... MySQL counts: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;getInt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; res;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; pstmt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; con;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; (sql&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;SQLException &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;e) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# ERR: SQLException in &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; __FILE__;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; __FUNCTION__ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;) on line &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; __LINE__ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# ERR: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; e.what();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (MySQL error code: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; e.getErrorCode();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, SQLState: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; e.getSQLState() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; )&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; EXIT_SUCCESS;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can compile the program with the following command and execute it:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases MySQL: Python Part 2</title>
      <link>https://blog.miguens.one/posts/2020/06/databases-mysql-python-part-2/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/06/databases-mysql-python-part-2/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In previous post we saw how to use SQLAlchemy and execute SQL commands to operate our database.&lt;/p&gt;&#xA;&lt;p&gt;Now we will see that there is a more convenient way to operate in Python using the SQLAlchemy&lt;/p&gt;&#xA;&lt;p&gt;In case you have reset your environment, we can start installing the package&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!!&lt;/span&gt;pip3 install sqlalchemy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Requirement already satisfied: sqlalchemy in /home/luis/.local/lib/python3.8/site-packages (1.3.20)&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;And before using the library, we need to import it&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases MySQL: Python Part 1</title>
      <link>https://blog.miguens.one/posts/2020/06/databases-mysql-python-part-1/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/06/databases-mysql-python-part-1/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In previous post we saw how to install and use an SQL database, now I will introduce how to use inside Python&lt;/p&gt;&#xA;&lt;p&gt;We have several connectors from SQL to Python that are &amp;ldquo;flavour&amp;rdquo; dependant. For example, we can use &lt;a href=&#34;https://pypi.org/project/psycopg2/&#34;&gt;psycopg2&lt;/a&gt; to connect to a PostgreSQL database or &lt;a href=&#34;https://dev.mysql.com/doc/connector-python/en/connector-python-example-connecting.html&#34;&gt;MySQL Connector&lt;/a&gt; to connect to MySQL.&lt;/p&gt;&#xA;&lt;p&gt;I like to take a step back, and use a package that is not dependant of the brand of database we will install. For that my favourite is &lt;a href=&#34;https://www.sqlalchemy.org/&#34;&gt;SQLAlchemy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases MySQL: Integrate SQL in Jupyter Lab</title>
      <link>https://blog.miguens.one/posts/2020/06/databases-mysql-integrate-sql-in-jupyter-lab/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/06/databases-mysql-integrate-sql-in-jupyter-lab/</guid>
      <description>&lt;h2 id=&#34;preparation-of-jupyter-notebook&#34;&gt;Preparation of Jupyter Notebook&lt;/h2&gt;&#xA;&lt;p&gt;In the previous post we saw how to install MySQL and prepare the external programs needed to use SQL in our Jupyter Notebook.&lt;/p&gt;&#xA;&lt;p&gt;Now let&amp;rsquo;s load the module and establish the connection and let&amp;rsquo;s start&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;load_ext sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;sql mysql&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;pymysql:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;user:password&lt;span style=&#34;color:#a6e22e&#34;&gt;@localhost&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;datab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-to-create-a-table&#34;&gt;How to create a table&lt;/h2&gt;&#xA;&lt;p&gt;Imagine that we want to build a database to identify pets. Every pet has an ID, a category (dog, cat, bird) and a name&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases MySQL: Installation</title>
      <link>https://blog.miguens.one/posts/2020/06/databases-mysql-installation/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/06/databases-mysql-installation/</guid>
      <description>&lt;h1 id=&#34;introduction-to-databases-mysql&#34;&gt;Introduction to Databases: MySQL&lt;/h1&gt;&#xA;&lt;p&gt;During the following days I will write about databases SQL, how to install, debug and use them via Python and C++.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;To install a MySQL I will use Docker, as it is the most easiest way in my opinion to quickly deploy a test database.&lt;/p&gt;&#xA;&lt;p&gt;In a Jupyter Notebook, let&amp;rsquo;s run:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!!&lt;/span&gt;docker run &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;name mysql&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;test &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e MYSQL_ROOT_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;secret &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt; mysql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;b2946635401f23ee223861da235cc309af878dd0305d03285673b39962ca1311&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;We can check that the database is running with &lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Efficient Market Hypothesis in the real world</title>
      <link>https://blog.miguens.one/posts/2020/02/the-efficient-market-hypothesis-in-the-real-world/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/02/the-efficient-market-hypothesis-in-the-real-world/</guid>
      <description>&lt;h2 id=&#34;higher-trading-profits-when-company-directors-trade-shares&#34;&gt;Higher trading profits when company directors trade shares&lt;/h2&gt;&#xA;&lt;p&gt;This empirically-backed statement represents a violation of the strong-form efficient market hypothesis. Due to their privileged position and continuous engagement with the issuer, insiders have great access to information. This gives them a trading advantage and they outperform the risk-adjusted benchmark and other traders in the market. Please note that, in principle, insiders are allowed to trade legally. It is only in a situation when they are in possession of material non-public information that they have to refrain from trading. Strong-form EMH states that even undisclosed information should be already discounted in stock prices. If this was true, insiders would be unable to generate abnormal trading profits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Differences between the efficient market hypothesis and the behavioural finance approach</title>
      <link>https://blog.miguens.one/posts/2020/02/differences-between-the-efficient-market-hypothesis-and-the-behavioural-finance-approach/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/02/differences-between-the-efficient-market-hypothesis-and-the-behavioural-finance-approach/</guid>
      <description>&lt;p&gt;The most substantial criticism of the EMH relies upon the assumption that all the investors are rational profit maximisers, and therefore, their investment is reasonable as well. Observations have shown that several investors are affected by herd instinct, a tendency to &amp;ldquo;churn&amp;rdquo; portfolios, to under-react or over-react to news and asymmetrical judgments about the causes of previous profits and losses.&#xA;With the concerns described above, a new theory was proposed based on psychology studies. The behavioural finance approach tries to find and explain the reason behind investors&amp;rsquo; behaviour, rather than assume their rationality like the EMH. In the behavioural approach, it is suggested that the investors could be prone to commit mistakes and errors originated by emotional and psychological forces and causing market anomalies (inefficiency in stocks markets) – e.g. the dot com bubble or the reactions seen in the recent global financial crisis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Efficient market hypothesis</title>
      <link>https://blog.miguens.one/posts/2020/02/the-efficient-market-hypothesis/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/02/the-efficient-market-hypothesis/</guid>
      <description>&lt;h1 id=&#34;the-efficient-market-hypothesis&#34;&gt;The Efficient market hypothesis&lt;/h1&gt;&#xA;&lt;p&gt;The efficient market hypothesis (EMH) goes back to 1900, but its popularity is attributed to Roberts (1967) and Fama (1970).&lt;/p&gt;&#xA;&lt;p&gt;The hypothesis defined the efficient market as a place where many rational individuals compete to maximise profit. In this market, all current and essential information is available free to all participants, while at the same time, there are no transaction costs.&lt;/p&gt;&#xA;&lt;p&gt;The state of competition of intelligent participants leads to the situation where, at any point in time, the price of the stock reflects all past information, as well as any predictions of the future.&#xA;Fama (1970) identified three levels of efficiency of the market: the strong form, the semi-strong form and finally, the weak form of the EMH.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alignment of managers’ actions and shareholders’ interests</title>
      <link>https://blog.miguens.one/posts/2020/01/alignment-of-managers-actions-and-shareholders-interests/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/01/alignment-of-managers-actions-and-shareholders-interests/</guid>
      <description>&lt;p&gt;Although there is no miraculous panacea, there are three main tools for dealing with the agency problem:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Increasing disclosure requirements reduces the informational asymmetry between the agent and the principal, limiting managers&amp;rsquo; ability to prioritise their own selfish goals.&lt;/li&gt;&#xA;&lt;li&gt;Creating a close relationship between company performance and directors&amp;rsquo; remuneration. Their compensation package could be a function of the profits generated. Alternatively, directors could receive part of their compensation in stocks or call options, which would align their incentives with the shareholders&amp;rsquo; objectives.&lt;/li&gt;&#xA;&lt;li&gt;The introduction of corporate governance rules could, to some extent, force directors to act in the best interest of the company.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The area of corporate governance is defined as the rules that govern how the directors interact with each other inside the company for effective management and handle the directors&amp;rsquo; interactions with the shareholders&amp;rsquo; desired direction.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conflict of interest: Shareholders vs Managers</title>
      <link>https://blog.miguens.one/posts/2020/01/conflict-of-interest-shareholders-vs-managers/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2020/01/conflict-of-interest-shareholders-vs-managers/</guid>
      <description>&lt;p&gt;Some stakeholders interest is not exclusively monetary. An example of such is &lt;a href=&#34;https://policy-practice.oxfam.org/resources/partnerships-in-fair-trade-reflections-from-a-case-study-of-cafe-direct-130427/&#34;&gt;Oxfam and Cafe Direct&amp;rsquo;s&lt;/a&gt; initial pursuit of promoting the Fairtrade brand.&lt;/p&gt;&#xA;&lt;p&gt;The above is not very common, and the working assumption is that the shareholders&amp;rsquo; objective is to maximise the wealth via the capital increase of the shares or the dividends. On the other hand, we should hypothesise that managers are more interested in their wealth and work security with the minimum effort possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Core challenges of operations in a small aerospace software firm</title>
      <link>https://blog.miguens.one/posts/2019/09/core-challenges-of-operations-in-a-small-aerospace-software-firm/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/09/core-challenges-of-operations-in-a-small-aerospace-software-firm/</guid>
      <description>&lt;h2 id=&#34;summary-of-the-core-challenges&#34;&gt;Summary of the core challenges&lt;/h2&gt;&#xA;&lt;p&gt;In order to analyse the areas that need more urgent action in operations, we will apply the concepts of market-qualifiers and order-winners from Hill 2005 and introduced by  (The Open University, 2012). Afterwards, we will analyse the limitations of growing operations or scalability&lt;/p&gt;&#xA;&lt;h3 id=&#34;qualifiers&#34;&gt;Qualifiers&lt;/h3&gt;&#xA;&lt;p&gt;It is defined as &amp;rsquo;entitle it to be considered by a customer&amp;rsquo;; in other words, the minimum threshold to be accepted by a customer. The organisation currently meets some of these criteria demanded by the public tenders, such as the curriculum of the staff, competence and geographical location. An element that disqualifies the organisation is the speed of delivery, and therefore a limitation in the future of the company&lt;/p&gt;</description>
    </item>
    <item>
      <title>Messages between applications: MQTT and C</title>
      <link>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-and-c/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-and-c/</guid>
      <description>&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;To make use of MQTT in C, we need to install a library to communicate with the server. A populat choice is &lt;a href=&#34;https://www.eclipse.org/paho/&#34;&gt;Paho&lt;/a&gt; from Eclipse.&lt;/p&gt;&#xA;&lt;p&gt;We need to follow the next steps to install it:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/eclipse/paho.mqtt.c.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd paho.mqtt.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo make install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Depending on your system, you might need to install the development package of OpenSSL (openssl-dev)&lt;/p&gt;&#xA;&lt;h2 id=&#34;writing-the-test-program&#34;&gt;Writing the test program&lt;/h2&gt;&#xA;&lt;p&gt;We need to create two files, &lt;code&gt;send.c&lt;/code&gt; and &lt;code&gt;receive.c&lt;/code&gt;. Both files are based upon the official examples of Paho&lt;/p&gt;</description>
    </item>
    <item>
      <title>Messages between applications: MQTT and Python</title>
      <link>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-and-python/</link>
      <pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-and-python/</guid>
      <description>&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;To make use of MQTT in Python, we need to install a library to communicate with the server. A populat choice is &lt;a href=&#34;https://www.eclipse.org/paho/&#34;&gt;Paho&lt;/a&gt; from Eclipse.&lt;/p&gt;&#xA;&lt;p&gt;As usual we can use pip to install it&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!!&lt;/span&gt;pip3 install paho&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mqtt &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Requirement already satisfied: paho-mqtt in /home/luis/.local/lib/python3.8/site-packages (1.5.1)&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;publish-a-message&#34;&gt;Publish a message&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; paho.mqtt.client &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; mqtt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;help(mqtt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;publish)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Help on function publish in module paho.mqtt.client:&#xA;&#xA;publish(self, topic, payload=None, qos=0, retain=False, properties=None)&#xA;    Publish a message on a topic.&#xA;    &#xA;    This causes a message to be sent to the broker and subsequently from&#xA;    the broker to any clients subscribing to matching topics.&#xA;    &#xA;    topic: The topic that the message should be published on.&#xA;    payload: The actual message to send. If not given, or set to None a&#xA;    zero length message will be used. Passing an int or float will result&#xA;    in the payload being converted to a string representing that number. If&#xA;    you wish to send a true int/float, use struct.pack() to create the&#xA;    payload you require.&#xA;    qos: The quality of service level to use.&#xA;    retain: If set to true, the message will be set as the &amp;quot;last known&#xA;    good&amp;quot;/retained message for the topic.&#xA;    properties: (MQTT v5.0 only) the MQTT v5.0 properties to be included.&#xA;    Use the Properties class.&#xA;    &#xA;    Returns a MQTTMessageInfo class, which can be used to determine whether&#xA;    the message has been delivered (using info.is_published()) or to block&#xA;    waiting for the message to be delivered (info.wait_for_publish()). The&#xA;    message ID and return code of the publish() call can be found at&#xA;    info.mid and info.rc.&#xA;    &#xA;    For backwards compatibility, the MQTTMessageInfo class is iterable so&#xA;    the old construct of (rc, mid) = client.publish(...) is still valid.&#xA;    &#xA;    rc is MQTT_ERR_SUCCESS to indicate success or MQTT_ERR_NO_CONN if the&#xA;    client is not currently connected.  mid is the message ID for the&#xA;    publish request. The mid value can be used to track the publish request&#xA;    by checking against the mid argument in the on_publish() callback if it&#xA;    is defined.&#xA;    &#xA;    A ValueError will be raised if topic is None, has zero length or is&#xA;    invalid (contains a wildcard), except if the MQTT version used is v5.0.  &#xA;    For v5.0, a zero length topic can be used when a Topic Alias has been set.&#xA;    &#xA;    A ValueError will be raised if qos is not one of 0, 1 or 2, or if&#xA;    the length of the payload is greater than 268435455 bytes.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mqtt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1883&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;publish(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example/path&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;, retain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;paho.mqtt.client.MQTTMessageInfo at 0x7fa8440554f0&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;retrieve-message&#34;&gt;Retrieve message&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mqtt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1883&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_message&lt;/span&gt;(client, userdata, msg, properties&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(msg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;topic&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(msg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;payload))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; on_message&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subscribe(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example/path&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loop_start()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;example/path b&#39;Hello world!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If everything went well, we should see Hello world as output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Messages between applications: MQTT Server</title>
      <link>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-server/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/08/messages-between-applications-mqtt-server/</guid>
      <description>&lt;h2 id=&#34;mqtt&#34;&gt;MQTT&lt;/h2&gt;&#xA;&lt;p&gt;In this series of post, I will explain how to use the message broker MQTT. From installation to submit and receive messages in Python and C++.&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-bit-of-history&#34;&gt;A bit of history&lt;/h2&gt;&#xA;&lt;p&gt;MQTT was created way back in 1999 by two engineers — Andy Stanford-Clark (IBM) and Arlen Nipper (Eurotech). They had to invent a new protocol for connecting oil pipelines over unreliable, satellite networks.&lt;/p&gt;&#xA;&lt;p&gt;The motivation for designing MQTT was to create a lightweight and bandwidth-efficient protocol that was data agnostic with support for multiple levels of Quality of Service (QoS). Interestingly, even today, those are the same reasons for which MQTT is chosen for implementing IoT solutions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Ratio Analysis</title>
      <link>https://blog.miguens.one/posts/2019/07/introduction-to-ratio-analysis/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/07/introduction-to-ratio-analysis/</guid>
      <description>&lt;h1 id=&#34;ratio-analysis&#34;&gt;Ratio Analysis&lt;/h1&gt;&#xA;&lt;p&gt;An investor or interested stakeholder, can use the financial statements to assess an organisation. But in most cases we would like to answer the question: Is organisation A better or not than B?.&lt;/p&gt;&#xA;&lt;p&gt;In this case, we should rely on a method to analyse and compare financial statements. One of the tools devised to analyse and asses the financial situation of an organisation is the ratio analysis.&lt;/p&gt;&#xA;&lt;p&gt;The definition of ratio (Oxford Dictionaries, 2019), states that is the quantitative relation between two amounts, showing the number of times one value contains or is contained within the other.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forms of control and motivation in regulated aerospace organizations</title>
      <link>https://blog.miguens.one/posts/2019/06/forms-of-control-and-motivation-in-regulated-aerospace-organizations/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/06/forms-of-control-and-motivation-in-regulated-aerospace-organizations/</guid>
      <description>&lt;p&gt;An organisation can be defined as a group of individuals working together to achieve one or more goals (The Open University, 2019). Therefore, we must engage people to work on the goals that the organisation considers essential. Unit 2.1 of this MBA (The Open University, 2014a) introduced Knights and Willmott&amp;rsquo;s findings, which identified four types of control mechanisms: direct supervision, rules and procedures, culture and performance.&lt;/p&gt;&#xA;&lt;p&gt;The author&amp;rsquo;s experience relies on a software firm in the aerospace sector, doing contractual work for governmental-type organisations. In the author&amp;rsquo;s knowledge, two control types overlap: &amp;ldquo;rules and procedures&amp;rdquo; and &amp;ldquo;performance&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Critique Tony Watson’s article</title>
      <link>https://blog.miguens.one/posts/2019/06/critique-tony-watsons-article/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/06/critique-tony-watsons-article/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Watson (1996), in his article, propose an ethnographic experiment. His objective is to study the engagement of his students in the motivation theories he teaches.&lt;/p&gt;&#xA;&lt;p&gt;I admire Watson&amp;rsquo;s attempt to design an experiment as controllable in dealing with the irreproducibility of an experiment that treats human behaviour. That falls into the domain of a complex system. As we discussed in Unit 2, &amp;ldquo;Every person is a world&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;During my life and my previous studies in System Thinking  (The Open University, 2016), I noted that it is complicated to separate the &amp;ldquo;self&amp;rdquo; component from the system to study. In Watson&amp;rsquo;s case, his inquiry about the study of better ways to teach motivation will irremediably change him about his teaching approach, making the experiment not reproducible anymore.&lt;/p&gt;</description>
    </item>
    <item>
      <title>System Thinking about a Situation of Concern</title>
      <link>https://blog.miguens.one/posts/2019/06/system-thinking-about-a-situation-of-concern/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/06/system-thinking-about-a-situation-of-concern/</guid>
      <description>&lt;h1 id=&#34;system-thinking-about-a-situation-of-concern-practical-example&#34;&gt;System Thinking about a Situation of Concern: Practical example&lt;/h1&gt;&#xA;&lt;p&gt;Defining a system as a set of interacting components integrated in a whole, with structure that are related (directly or indirectly) to each other, behaviour and interconnectivity in which part or processes are connected, and any changes affect the whole, we can see how our SoC with management focus on the profitability and employees with a focus in professional development and learning are competing situations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Critique of recipe-based approach to managing change</title>
      <link>https://blog.miguens.one/posts/2019/05/critique-of-recipe-based-approach-to-managing-change/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/05/critique-of-recipe-based-approach-to-managing-change/</guid>
      <description>&lt;p&gt;Grey and Sturdy (2003) criticised the focus on managerialism and universalism of managing change, making an argument against a recipe approach to change management and the existence of step by step guides on how to manage change successfully.&lt;/p&gt;&#xA;&lt;p&gt;I am not unfamiliar with that component of Grey and Sturdy&amp;rsquo;s critique, as it was one of the core ideas of the module TU812: Managing systemic change: inquiry, action, and interaction of the Open University.  Ison (2010), in his book &amp;ldquo;System practice: How to act in a climate-change world&amp;rdquo;, suggests that situations should be approached by a system thinking approach rather than a recipe-for-all theory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Critique of Communities of Practice</title>
      <link>https://blog.miguens.one/posts/2019/04/critique-of-communities-of-practice/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/04/critique-of-communities-of-practice/</guid>
      <description>&lt;h2 id=&#34;critique-of-communities-of-practice&#34;&gt;Critique of Communities of Practice&lt;/h2&gt;&#xA;&lt;p&gt;The examples of Communities of Practice presented in (Blackmore, 2010) do not provide a practical implementation in a business environment and is lacking information about how CoP could translate in profit for an organisation.&lt;/p&gt;&#xA;&lt;p&gt;We have seen that CoP can translate in profit in an indirect approach, via employee satisfaction and reducing turnover rates of the company.&lt;/p&gt;&#xA;&lt;p&gt;We could also argue that the different interpretations of CoP make it challenging to apply the concepts or to take complete advantage of the benefits that the communities of practice could offer. Nonetheless, that is expected as the module deals with complex situations that cannot be solved with a “recipe” approach of classical project management. In this context, Communities of Practice are a framework providing ideas on how to develop a system to tackle complex situations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Strengths, weakness and missing elements of the theory of communities of practice</title>
      <link>https://blog.miguens.one/posts/2019/04/strengths-weakness-and-missing-elements-of-the-theory-of-communities-of-practice/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/04/strengths-weakness-and-missing-elements-of-the-theory-of-communities-of-practice/</guid>
      <description>&lt;h2 id=&#34;strengths-weakness-and-missing-elements-of-the-theory-of-communities-of-practice&#34;&gt;Strengths, weakness and missing elements of the theory of communities of practice&lt;/h2&gt;&#xA;&lt;p&gt;We can discuss that the strengths of a community of practice are to provide a framework of ideas regarding the “how” to organise a system in which members can share ideas and develop themselves to proficient professionals. For example, without Wenger’s model, I would have overlooked the role those business developers could exercise in a community of practice as brokers of ideas and information.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taking a design turn</title>
      <link>https://blog.miguens.one/posts/2019/04/taking-a-design-turn/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/04/taking-a-design-turn/</guid>
      <description>&lt;p&gt;We have seen that in contrast to a systematic approach, there are no templates in the systemic approach. (Ison, 2010) introduces two orders in the learning system. The first order is characterised by a knowledge transfer, while the second order is about creating the environment to allow the student or practitioner to learn by itself.&lt;/p&gt;&#xA;&lt;p&gt;The transition from the first order mentality to the second order is what it is called ‘a design turn’.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Project management vs System Inquiry</title>
      <link>https://blog.miguens.one/posts/2019/04/project-management-vs-system-inquiry/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/04/project-management-vs-system-inquiry/</guid>
      <description>&lt;p&gt;From my previous studies in the module T848 in The Open University, I was introduced to quadrants in project management approaches. According to (Fernandez, 2016), a project is classified according to a binary answer to two characteristics: goal and solution, as summarised in figure (2):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.miguens.one/img/project_management.png&#34; alt=&#34;Project Management quadrants&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Figure 2: Project characteristics quadrants. Extracted from (Fernandez, 2016) &lt;/p&gt;&#xA;&lt;p&gt;We can appreciate the similarities of a project with unclear goal and unclear solution with the words of (Ison, 2010): “Thus, unlike most projects, a systemic inquiry does not specify outcomes or deliverables before it starts – though it may specify process or timing milestones – and thus maintains an openness to surprise, adaption and an underlying emotion of uncertainty…”&#xA;(Fernandez, 2016) adds that in quadrant 3, no business value is guaranteed and introduces a variation of project managing with shorter linear and template-based solutions. I agree, therefore, with (Ison, 2010) rationale and critique of a “projectified” world.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My understanding of System Inquiry</title>
      <link>https://blog.miguens.one/posts/2019/04/my-understanding-of-system-inquiry/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2019/04/my-understanding-of-system-inquiry/</guid>
      <description>&lt;p&gt;After several examples during the course of Systems Thinking, part of Open University MBA, we can see that traditional approaches to project management had failed in tackling some difficult situations.&lt;/p&gt;&#xA;&lt;p&gt;In chapter 10 of (Ison, 2010), it is discussed that situations with several complex elements interdependent which each other, in which an internal modification of either an element or connection will result in an uncertain outcome, and where conflict is present, due to different goal of the elements of the situation and the different background (understood as history and perspective) of the stakeholders, can benefit of systems thinking approach, and therefore introducing the concept of systemic inquiry as a meta-platform or process for a project or program managing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Definitions of system related concepts</title>
      <link>https://blog.miguens.one/posts/2018/12/definitions-of-system-related-concepts/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/12/definitions-of-system-related-concepts/</guid>
      <description>&lt;p&gt;The different definitions of a system are:&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;A system, in general, is any part of the universe which may be defined by a boundary which distinguishes it from the rest of the universe.&amp;rdquo; &lt;em&gt;(&lt;a href=&#34;https://nptel.ac.in/courses/103101004/2&#34;&gt;https://nptel.ac.in/courses/103101004/2&lt;/a&gt;, 2018)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;system (NOUN)&lt;/p&gt;&#xA;&lt;p&gt;1. set of things working together as parts of a mechanism or an interconnecting network; a complex whole.&lt;/p&gt;&#xA;&lt;p&gt;2. set of principles or procedures according to which something is done; an organized scheme or method.&amp;rdquo; &lt;em&gt;(&lt;a href=&#34;https://en.oxforddictionaries.com/definition/system&#34;&gt;https://en.oxforddictionaries.com/definition/system&lt;/a&gt;, 2018)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automate Plex Clean-up</title>
      <link>https://blog.miguens.one/posts/2018/11/automate-plex-clean-up/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/11/automate-plex-clean-up/</guid>
      <description>&lt;p&gt;In an old post I teach how to create your own Netflix with Docker Compose. The problem is that over time you can download several movies with really low rating, or from a genre you are not a fan.&lt;/p&gt;&#xA;&lt;p&gt;I have created a small Jupyter Notebook to help me with my spring-cleaning (in this case winter). Feel free to modify it to your case.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; plexapi.myplex &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MyPlexAccount&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;account &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MyPlexAccount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USERNAME&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; account&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resource(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PLEX SERVER NAME&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;movies_to_delete &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;movies_to_refresh &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;movies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;library&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;section(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Films&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;liked_genres &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Comedy&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Horror&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sci-Fi&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mystery&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Adventure&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Action&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fantasy&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Thriller&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Science Fiction&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Action/Adventure&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Crime&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Western&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Animation&amp;#39;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; movie &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; movies&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(unwatched&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;): &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    genres &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; genre &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; movie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;genres:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        genres&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(genre&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tag)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(genres &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; liked_genres) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Movie &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; not with liked genres: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(movie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title, genres))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(movie)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;movies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;library&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;section(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Films&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; video &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; movies&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(unwatched&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rating&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    audience &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;audienceRating&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{title}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, rating = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{rating}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, audience = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{audience}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              format(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; title, rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rating, audience &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; audience))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(video)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       audience &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{title}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, rating = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{rating}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, audience = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{audience}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              format(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; title, rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rating, audience &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; audience))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(video)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (rating &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; audience)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{title}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, rating = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{rating}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, audience = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{audience}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              format(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; title, rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rating, audience &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; audience))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(video)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{title}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, rating = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{rating}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, audience = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{audience}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              format(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; title, rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rating, audience &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; audience))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(video)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; audience &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; rating &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        movies_to_refresh&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(video)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;movies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;library&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;section(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Films&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; movie &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; movies&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(unwatched&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    movie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reload()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; media &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; movie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;media:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; part &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; media&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parts:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            languages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; audioStream &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; part&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;audioStreams():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                language &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; audioStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;language&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; language &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    languages&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(language)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(languages) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;English&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; languages:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The movie &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; is not in English (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(movie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title, languages))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                movies_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(movie)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for movie in movies_to_delete:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     print(&amp;#34;Deleting {}&amp;#34;.format(movie.title))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     movie.delete()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for movie in movies_to_refresh:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     print(&amp;#34;Refresing metadata of movie for next run: {}&amp;#34;.format(movie.title))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     video.refresh()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For safety I have commented the lines that delete or trigger a refresh in Plex, so you can copy/paste and try it without risk&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dynamic capabilities in small software firms</title>
      <link>https://blog.miguens.one/posts/2018/06/dynamic-capabilities-in-small-software-firms/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/06/dynamic-capabilities-in-small-software-firms/</guid>
      <description>&lt;p&gt;Today I wish to summarise and critique a paper I found quite insightful.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Mathiassen, L. and Vainio, A. M. (2007) &amp;lsquo;Dynamic capabilities in small software firms: A sense-and-respond approach&amp;rsquo;, IEEE Transactions on Engineering Management, vol. 54, no. 3, pp. 522&amp;ndash;538 [Online]. DOI: 10.1109/TEM.2007.900782&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The paper describes two organisations in different phases of expansion. Both are in the category of small companies in the field of mobile applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;&#xA;&lt;p&gt;The paper starts by defining the object of study, small software firms, depending on integration and reconfiguration capabilities to operate in high-velocity markets. This type of companies&amp;rsquo; constraints is limited resources (schedule, fixed costs) and a high dependency on a few big players. The paper takes as a base the Sense-and-Respond approach to managing dynamic capabilities of Haeckel (1995). The study relies on interviews with CEOs, the Department Managers and Team Leaders of two firms with different levels of evolution, named &amp;ldquo;Starter, Inc&amp;rdquo; and &amp;ldquo;Mature, Inc&amp;rdquo;. Also introduces that successful adaptive organisations can monitor (Sense) environment signals quickly and translate into action (Respond) in three areas:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remove the password protection of Excel Macros</title>
      <link>https://blog.miguens.one/posts/2018/03/remove-the-password-protection-of-excel-macros/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/03/remove-the-password-protection-of-excel-macros/</guid>
      <description>&lt;p&gt;Way too often, people find themselves trying to update an existing macro in an excel file to reflect the organisation&amp;rsquo;s procedure changes.&lt;/p&gt;&#xA;&lt;p&gt;In some of those cases, the author has protected the macro code with a password. Whatever the reason that author might have had for that, it does not prevent future use, modifications, or preserve the code&amp;rsquo;s secrecy.&lt;/p&gt;&#xA;&lt;p&gt;As shown below, it is straightforward to remove such a password.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eco-innovation discussion for modern vehicles</title>
      <link>https://blog.miguens.one/posts/2018/02/eco-innovation-discussion-for-modern-vehicles/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/02/eco-innovation-discussion-for-modern-vehicles/</guid>
      <description>&lt;p&gt;During my MBA in Technology Management, I have studied three approaches to Eco-innovation:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(1) Life cycle thinking&lt;/li&gt;&#xA;&lt;li&gt;(2) Close loop production and&lt;/li&gt;&#xA;&lt;li&gt;(3) Industrial ecology.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;When dealing with an eco-innovation discussion for batteries or hydrogen cell of electric vehicles, it is my opinion that the primary approach is (1) trying to incorporate some elements of (2) when possible. Point (3) will be relevant from the point of view of the manufacturing process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Discussion of Project Management Approaches for Ecological Vehicles</title>
      <link>https://blog.miguens.one/posts/2018/02/discussion-of-project-management-approaches-for-ecological-vehicles/</link>
      <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/02/discussion-of-project-management-approaches-for-ecological-vehicles/</guid>
      <description>&lt;p&gt;From the point of view of a car manufacturer that wishes to create a network of recharging stations for its ecological vehicle, whatever it is electric or hydrogen cell-based, it will find some elements that it cannot fully control, such as:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(1) Public reception of the new technology&lt;/li&gt;&#xA;&lt;li&gt;(2) Economic situation&lt;/li&gt;&#xA;&lt;li&gt;(3) Public policies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Those three factors are not the same in all countries and can even change inside the same country&amp;rsquo;s regions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Challenges of fully autonomous driving</title>
      <link>https://blog.miguens.one/posts/2018/01/challenges-of-fully-autonomous-driving/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/01/challenges-of-fully-autonomous-driving/</guid>
      <description>&lt;p&gt;From Level 4 and onwards, we can face challenges in the adoption of autonomous driving technology. These can be classified into (1) Legal challenges, (2) Certification and intellectual property, (3) Ethical challenges, (4) Social challenges.&lt;/p&gt;&#xA;&lt;h2 id=&#34;legal-challenges&#34;&gt;Legal challenges&lt;/h2&gt;&#xA;&lt;p&gt;We can note two cases in which society should adapt to this innovation. In the first case, if we apply autonomous driving to trucks to make the transportation of goods more cost-efficient, it will be natural to cross the country&amp;rsquo;s borders.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Roadmap: Technology Innovation for fully autonomous car</title>
      <link>https://blog.miguens.one/posts/2018/01/roadmap-technology-innovation-for-fully-autonomous-car/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/01/roadmap-technology-innovation-for-fully-autonomous-car/</guid>
      <description>&lt;p&gt;Many cars sold today are capable of some level of automated operation.&lt;/p&gt;&#xA;&lt;p&gt;This roadmap&amp;rsquo;s objective is to show the relevant events in technology innovation that have allowed current day features, and we will try to draw the future designs required for a fully autonomous car.&lt;/p&gt;&#xA;&lt;p&gt;The automation of driving has several steps. We can range between the autonomous system&amp;rsquo;s levels of operation from no control (human driver has to remain in control all the time) to fully autonomous driving (the occupant is only required to set the destination).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flight Simulators as Product Innovation</title>
      <link>https://blog.miguens.one/posts/2018/01/flight-simulators-as-product-innovation/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2018/01/flight-simulators-as-product-innovation/</guid>
      <description>&lt;p&gt;Boeing anticipates that, only in the Asian region, the aviation industry will require almost half million of pilots and qualified technicians to meet the demand for air travel in the next 20 years.&lt;/p&gt;&#xA;&lt;p&gt;Due to the high cost of buying and maintaining an airplane, the investment in a real aircraft for only training purposes is out of the question, therefore the training centres should rely on simulations to provide the education that future pilots and technicians demand.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to make your own Netflix with Docker</title>
      <link>https://blog.miguens.one/posts/2017/05/how-to-make-your-own-netflix-with-docker/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2017/05/how-to-make-your-own-netflix-with-docker/</guid>
      <description>&lt;h1 id=&#34;how-to-create-your-own-netflix&#34;&gt;How to create your own Netflix&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;This is post is only for educational purposes. I am not condoning media piracy in any way&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;I was asking myself, how can I build my own Netflix. That questions derived in more specific questions like &amp;ldquo;how can I&amp;hellip;&amp;rdquo;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;easily stream content from my storage device to my TV?&lt;/li&gt;&#xA;&lt;li&gt;automate the gathering of content to put onto my storage device?&lt;/li&gt;&#xA;&lt;li&gt;securely control the resulting system?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this post, we will see how I managed to answer such questions, while at the same time, it was an excellent exercise to learn about Docker, combining several open sources or free programs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why I am writing a blog</title>
      <link>https://blog.miguens.one/posts/2017/02/why-i-am-writing-a-blog/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://blog.miguens.one/posts/2017/02/why-i-am-writing-a-blog/</guid>
      <description>&lt;p&gt;The benefits of journaling have been discussed worldwide (ex. &lt;a href=&#34;https://www.huffpost.com/entry/benefits-of-journaling-_b_6648884&#34;&gt;Benefits of Journaling&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Most authors emphasise the improved creativity and self-reflection aspects of journaling. While we could stop there and always use our journal to record feeling, ideas and, in general, record everything we consider worth analysing, we could take a step further and make some of our entries public.&lt;/p&gt;&#xA;&lt;p&gt;Like that, a blog is born!&lt;/p&gt;&#xA;&lt;p&gt;Making our thoughts available for the world to read come with some side-effects: We will become better writers.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
